
//[+]=========================[+]
//----------|Poison|-------------
//[+]=========================[+]

actor PoisonBuildRate : Inventory{inventory.amount 1 Inventory.MaxAmount 100}

actor PoisonStatusBuild : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_Jumpifinventory("PoisonBuildRate",1,"Build")
TNT1 A 0 A_GiveInventory("PoisonBuildRate",5)
TNT1 A 0 A_SpawnItemEX("PoisonBuilder")
goto Build

Build:
TNT1 A 0 A_GiveInventory("PoisonBuildRate",random(35,45))
stop

Nope:
TNT1 A 0
stop
}
}

actor PoisonStatusFastBuild : PoisonStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("PoisonBuildRate",random(75,100))
stop
}
}

actor PoisonStatusSlowBuild : PoisonStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("PoisonBuildRate",random(20,35))
stop
}
}

actor PoisonBuilder //: CustomInventory
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
States
{
Spawn:
TNT1 A 0
TNT1 A 5 

TNT1 A 1 A_JumpIfInTargetInventory("PoisonBuildRate",100,"FullBuild")
Goto PartBuild

PartBuild:
TNT1 A 1 A_JumpIfInTargetInventory("PoisonBuildRate",1,"BuildCycle")
Goto Death

FullBuild:
TNT1 A 1 A_GiveToTarget("PoisonStatusProc")
Goto Death

BuildCycle:
TNT1 A 1 A_TakefromTarget("PoisonBuildRate",3)
TNT1 A 0 A_JumpIfInTargetInventory("PoisonBuildRate",1,"Spawn")
Goto Death

Death:
DeathTake:
TNT1 A 0
TNT1 A 1 A_TakefromTarget("PoisonBuildRate",999)
stop
}
}

//[+]=========================[+]
//----------|Burn|-------------
//[+]=========================[+]

actor BurnBuildRate : Inventory{inventory.amount 1 Inventory.MaxAmount 100}

actor BurnStatusBuild : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_Jumpifinventory("BurnBuildRate",1,"Build")
TNT1 A 0 A_GiveInventory("BurnBuildRate",5)
TNT1 A 0 A_SpawnItemEX("BurnBuilder")
goto Build

Build:
TNT1 A 0 A_GiveInventory("BurnBuildRate",random(35,45))
stop

Nope:
TNT1 A 0
stop
}
}

actor BurnStatusFastBuild : BurnStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("BurnBuildRate",random(75,100))
stop
}
}

actor BurnStatusSlowBuild : BurnStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("BurnBuildRate",random(20,35))
stop
}
}

actor BurnBuilder //: CustomInventory
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
States
{
Spawn:
TNT1 A 0
TNT1 A 5 

TNT1 A 1 A_JumpIfInTargetInventory("BurnBuildRate",100,"FullBuild")
Goto PartBuild

PartBuild:
TNT1 A 1 A_JumpIfInTargetInventory("BurnBuildRate",1,"BuildCycle")
Goto Death

FullBuild:
TNT1 A 1 A_GiveToTarget("BurnStatusProc")
Goto Death

BuildCycle:
TNT1 A 1 A_TakefromTarget("BurnBuildRate",3)
TNT1 A 0 A_JumpIfInTargetInventory("BurnBuildRate",1,"Spawn")
Goto Death

Death:
DeathTake:
TNT1 A 0
TNT1 A 1 A_TakefromTarget("BurnBuildRate",999)
stop
}
}

//[+]=========================[+]
//----------|Paralysis|-------------
//[+]=========================[+]

actor ParalysisBuildRate : Inventory{inventory.amount 1 Inventory.MaxAmount 100}

actor ParalysisStatusBuild : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_Jumpifinventory("ParalysisBuildRate",1,"Build")
TNT1 A 0 A_GiveInventory("ParalysisBuildRate",5)
TNT1 A 0 A_SpawnItemEX("ParalysisBuilder")
goto Build

Build:
TNT1 A 0 A_GiveInventory("ParalysisBuildRate",random(35,45))
stop

Nope:
TNT1 A 0
stop
}
}

actor ParalysisStatus_50Per : ParalysisStatusBuild
{
States
{
    Pickup:
    TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
    //==
    TNT1 A 0 A_Jump(128,"Insta")
    //==
    TNT1 A 0 A_Jumpifinventory("ParalysisBuildRate",1,"Build")
    TNT1 A 0 A_GiveInventory("ParalysisBuildRate",5)
    TNT1 A 0 A_SpawnItemEX("ParalysisBuilder")
    goto Build

Build:
TNT1 A 0 A_GiveInventory("ParalysisBuildRate",random(75,100))
stop

Insta:
TNT1 A 0 A_GiveInventory("ParalysisStatusProc2")
stop
}
}

actor ParalysisStatusFastBuild : ParalysisStatusBuild
{
States
{
Build:
TNT1 A 0 A_Jump(256,"Insta")
TNT1 A 0 A_GiveInventory("ParalysisBuildRate",random(75,100))
stop

Insta:
TNT1 A 0 A_GiveInventory("ParalysisBuildRate",100)
stop
}
}

actor ParalysisStatusSlowBuild : ParalysisStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("ParalysisBuildRate",random(20,35))
stop
}
}

actor ZapParalysisStatusBuild : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
TNT1 A 0 A_Jumpifinventory("Zap_ParalysisGuard",1,"Nope")
TNT1 A 0 A_Jumpifinventory("TempZap_ParalysisGuard",1,"Nope")
//==
TNT1 A 0 A_Jumpifinventory("ParalysisBuildRate",1,"Build")
TNT1 A 0 A_GiveInventory("ParalysisBuildRate",5)
TNT1 A 0 A_SpawnItemEX("ParalysisBuilder")
goto Build

Build:
TNT1 A 0 A_GiveInventory("ParalysisBuildRate",random(35,45))
stop

Nope:
TNT1 A 0
stop
}
}

actor ZapParalysisStatusFastBuild : ZapParalysisStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("ParalysisBuildRate",random(75,100))
stop
}
}

actor ZapParalysisStatusSlowBuild : ZapParalysisStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("ParalysisBuildRate",random(20,35))
stop
}
}

actor ParalysisBuilder //: CustomInventory
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
States
{
Spawn:
TNT1 A 0
TNT1 A 5 

TNT1 A 1 A_JumpIfInTargetInventory("ParalysisBuildRate",100,"FullBuild")
Goto PartBuild

PartBuild:
TNT1 A 1 A_JumpIfInTargetInventory("ParalysisBuildRate",1,"BuildCycle")
Goto Death

FullBuild:
TNT1 A 1 A_GiveToTarget("ParalysisStatusProc2")
Goto Death

BuildCycle:
TNT1 A 1 A_TakefromTarget("ParalysisBuildRate",3)
TNT1 A 0 A_JumpIfInTargetInventory("ParalysisBuildRate",1,"Spawn")
Goto Death

Death:
DeathTake:
TNT1 A 0
TNT1 A 1 A_TakefromTarget("ParalysisBuildRate",999)
stop
}
}


//[+]=========================[+]
//----------|Sleep|-------------
//[+]=========================[+]

actor SleepBuildRate : Inventory{inventory.amount 1 Inventory.MaxAmount 100}

actor SleepStatusBuild : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_Jumpifinventory("SleepBuildRate",1,"Build")
TNT1 A 0 A_GiveInventory("SleepBuildRate",5)
TNT1 A 0 A_SpawnItemEX("SleepBuilder")
goto Build

Build:
TNT1 A 0 A_GiveInventory("SleepBuildRate",random(35,45))
stop

Nope:
TNT1 A 0
stop
}
}

actor SleepStatusFastBuild : SleepStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("SleepBuildRate",random(75,100))
stop
}
}

actor SleepStatusSlowBuild : SleepStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("SleepBuildRate",random(20,35))
stop
}
}

actor SleepBuilder //: CustomInventory
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
States
{
Spawn:
TNT1 A 0
TNT1 A 5 

TNT1 A 1 A_JumpIfInTargetInventory("SleepBuildRate",100,"FullBuild")
Goto PartBuild

PartBuild:
TNT1 A 1 A_JumpIfInTargetInventory("SleepBuildRate",1,"BuildCycle")
Goto Death

FullBuild:
TNT1 A 1 A_GiveToTarget("SleepStatusProc")
Goto Death

BuildCycle:
TNT1 A 1 A_TakefromTarget("SleepBuildRate",3)
TNT1 A 0 A_JumpIfInTargetInventory("SleepBuildRate",1,"Spawn")
Goto Death

Death:
DeathTake:
TNT1 A 0
TNT1 A 1 A_TakefromTarget("SleepBuildRate",999)
stop
}
}


//[+]=========================[+]
//----------|Cringe|-------------
//[+]=========================[+]

actor CringeBuildRate : Inventory{inventory.amount 1 Inventory.MaxAmount 100}

actor CringeStatusBuild : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_Jumpifinventory("CringeBuildRate",1,"Build")
TNT1 A 0 A_GiveInventory("CringeBuildRate",5)
TNT1 A 0 A_SpawnItemEX("CringeBuilder")
goto Build

Build:
TNT1 A 0 A_GiveInventory("CringeBuildRate",random(35,45))
stop

Nope:
TNT1 A 0
stop
}
}

actor CringeStatus_50Per : CringeStatusBuild
{
States
{
    Pickup:
    TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
    //==
    TNT1 A 0 A_Jump(128,"Insta")
    //==
    TNT1 A 0 A_Jumpifinventory("CringeBuildRate",1,"Build")
    TNT1 A 0 A_GiveInventory("CringeBuildRate",5)
    TNT1 A 0 A_SpawnItemEX("CringeBuilder")
    goto Build

Build:
TNT1 A 0 A_GiveInventory("CringeBuildRate",random(75,100))
stop

Insta:
TNT1 A 0 A_GiveInventory("CringeStatusProc")
stop
}
}

actor CringeStatusFastBuild : CringeStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("CringeBuildRate",random(75,100))
stop
}
}

actor CringeStatusSlowBuild : CringeStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("CringeBuildRate",random(20,35))
stop
}
}

actor CringeBuilder //: CustomInventory
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
States
{
Spawn:
TNT1 A 0
TNT1 A 5 

TNT1 A 1 A_JumpIfInTargetInventory("CringeBuildRate",100,"FullBuild")
Goto PartBuild

PartBuild:
TNT1 A 1 A_JumpIfInTargetInventory("CringeBuildRate",1,"BuildCycle")
Goto Death

FullBuild:
TNT1 A 1 A_GiveToTarget("CringeStatusProc")
Goto Death

BuildCycle:
TNT1 A 1 A_TakefromTarget("CringeBuildRate",3)
TNT1 A 0 A_JumpIfInTargetInventory("CringeBuildRate",1,"Spawn")
Goto Death

Death:
DeathTake:
TNT1 A 0
TNT1 A 1 A_TakefromTarget("CringeBuildRate",999)
stop
}
}

//[+]=========================[+]
//----------|Confusion|----------
//[+]=========================[+]

actor ConfusionBuildRate : Inventory{inventory.amount 1 Inventory.MaxAmount 100}

actor ConfusionStatusBuild : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") 
//==
TNT1 A 0 A_Jumpifinventory("ConfusionBuildRate",1,"Build")
TNT1 A 0 A_GiveInventory("ConfusionBuildRate",5)
TNT1 A 0 A_SpawnItemEX("ConfusionBuilder")
goto Build

Build:
TNT1 A 0 A_GiveInventory("ConfusionBuildRate",random(35,45))
stop

Nope:
TNT1 A 0
stop
}
}

actor ConfusionStatusFastBuild : ConfusionStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("ConfusionBuildRate",random(75,100))
stop
}
}

actor ConfusionStatusSlowBuild : ConfusionStatusBuild
{
States
{
Build:
TNT1 A 0 A_GiveInventory("ConfusionBuildRate",random(20,35))
stop
}
}

actor ConfusionBuilder //: CustomInventory
{
+MISSILE
+RIPPER
+NOGRAVITY
+NOINTERACTION
Reactiontime 5
States
{
Spawn:
TNT1 A 0
TNT1 A 5 

TNT1 A 1 A_JumpIfInTargetInventory("ConfusionBuildRate",100,"FullBuild")
Goto PartBuild

PartBuild:
TNT1 A 1 A_JumpIfInTargetInventory("ConfusionBuildRate",1,"BuildCycle")
Goto Death

FullBuild:
TNT1 A 1 A_GiveToTarget("ConfusionStatusProc")
Goto Death

BuildCycle:
TNT1 A 1 A_TakefromTarget("ConfusionBuildRate",3)
TNT1 A 0 A_JumpIfInTargetInventory("ConfusionBuildRate",1,"Spawn")
Goto Death

Death:
DeathTake:
TNT1 A 0
TNT1 A 1 A_TakefromTarget("ConfusionBuildRate",999)
stop
}
}