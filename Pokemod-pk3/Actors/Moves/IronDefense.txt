actor IronDefenseMove : WepMasterBase
{
Tag "IronDefense"
obituary "$OB_IRONDEFENSE"
Weapon.AmmoUse 1
Weapon.AmmoGive 5
weapon.ammotype "IronDefensePP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
States
{
Spawn:
WEAP X 1
stop


Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_C)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 0 //A_JumpIfInventory("STF_IronDefense",1,"NoAmmo")
"####" B 0 A_Jump(256,"Fire.On")
Goto Fire.On

Fire.On:
"####" B 0 A_PlaySoundEx("Move/IronDefense","Soundslot6")
"####" BBB 5 A_GiveInventory("IronDefenseParticleSpawn")
"####" B 0 A_PlaySoundEx("Support/Statup","Soundslot7")
"####" B 0 A_GiveInventory("IronDefenseBuffInitiate")
"####" B 0 A_TakeInventory("IronDefensePP",1)
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.Off:
"####" B 0 A_TakeInventory("IronDefense_Active",99)
"####" B 0 A_GiveInventory("PartRecovery_C")
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.After:
"####" B 1 A_GiveInventory("HalfRecovery_C")
"####" B 0 A_GiveInventory("MoveCooldown_3")
"####" C 0 A_REfire("Fire")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End

}
}

actor IronDefenseMove1 : IronDefenseMove {Weapon.SlotNumber 1}
actor IronDefenseMove2 : IronDefenseMove {Weapon.SlotNumber 2}
actor IronDefenseMove3 : IronDefenseMove {Weapon.SlotNumber 3}
actor IronDefenseMove4 : IronDefenseMove {Weapon.SlotNumber 4}

actor IronDefenseMove5 : IronDefenseMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("IronDefenseMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}

//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor IronDefensePP : Ammo {inventory.amount 1 inventory.Maxamount 5}
actor STF_IronDefense : BaseSTatusFlag3 {}
actor IronDefense_Active : Inventory {inventory.amount 1 inventory.Maxamount 1}

actor IronDefenseReflect : PowerReflection
{
inventory.amount 1 
Powerup.Duration -30
//+PowerReflection.ReflectType
DamageFactor 0.5
}

actor IronDefenseBuffInitiate : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("STF_IronDefense",1,"Sustain")
TNT1 A 0 A_GiveInventory("STF_IronDefense",1)
//TNT1 A 0 A_GiveInventory("ReflectiveOn_Pickup",1)
TNT1 A 0 A_SpawnitemEX("IronDefenseBuffWatcher")
TNT1 A 0 ACS_NamedExecuteAlways("StatItemNuke",0,SB_BAD)
TNT1 A 0 A_GiveInventory("IronDefenseClense",1)
TNT1 A 0 A_GiveInventory("StatUpdator",1)
stop

Sustain:
TNT1 A 0 A_GiveInventory("STF_IronDefense",1)
TNT1 A 0 ACS_NamedExecuteAlways("StatItemNuke",0,SB_BAD)
TNT1 A 0 A_GiveInventory("IronDefenseClense",1)
TNT1 A 0 A_GiveInventory("StatUpdator",1)
//TNT1 A 0 A_GiveInventory("ReflectiveOn_Pickup",1)
stop
Nope:
TNT1 A 0
stop
}
}

actor IronDefenseClense : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("SleepMark",1,"Success")
TNT1 A 0 A_Jumpifinventory("ParalysisMark",1,"Success")
TNT1 A 0 A_Jumpifinventory("BurnMark",1,"Success")
TNT1 A 0 A_Jumpifinventory("PoisonMark",1,"Success")
TNT1 A 0 A_Jumpifinventory("CringeMark",1,"Success")
TNT1 A 0 A_Jumpifinventory("SemiFreezeMark",1,"Success")
TNT1 A 0 A_Jumpifinventory("FreezeMark",1,"Success")
TNT1 A 0 A_Jumpifinventory("ConfusionMark",1,"Success")
TNT1 A 0 A_Jumpifinventory("TauntFlag",1,"Success")
Goto Nope

Success:
TNT1 A 0 A_GiveInventory("CureAll",1)
TNT1 A 0 A_GiveInventory("FeelingFine",1)
TNT1 A 0 A_TakeInventory("TauntFlag",99)

TNT1 A 0 A_GiveInventory("CureEffectSpawner",1)
TNT1 A 0 A_PlaySound("Support/Heal1")
stop

Nope:
TNT1 A 0
stop
}
}


actor IronDefenseBuffWatcher : BasicHelper 
{
Var int user_TickTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("HazeFlag",1,"Death")
TNT1 A 5 
TNT1 A 0 A_GiveToTarget("SpawnStatusParticles")
TNT1 A 0 A_JumpIfInTargetInventory("STF_IronDefense",1,"Spawn")
Goto Death

Death:
TNT1 A 0 A_GiveToTarget("StatUpdator")
TNT1 A 0 A_GiveToTarget("BuffLossSoundCue")
TNT1 A 0 A_GiveToTarget("ReflectiveOff_Pickup")
TNT1 A 0 A_TakeFromTarget("STF_IronDefense",9)
TNT1 A 2 
stop
}
}

/*
actor IronDefenseBuffWatcher : BasicHelper 
{
Var int user_TickTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("HazeFlag",1,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("TauntFlag",1,"Death")
TNT1 A 5 A_GiveToTarget("STF_IronDefense")
TNT1 A 0 A_GiveToTarget("SpawnStatusParticles")
TNT1 A 0 A_SetUserVar("user_TickTime",user_TickTime+5)
TNT1 A 0 A_JumpIf(user_TickTime>=35,"SpawnTick")
TNT1 A 0 A_JumpIfInTargetInventory("IronDefense_Active",1,"Spawn")
Goto Death

SpawnTick:
TNT1 A 0 A_SetUserVar("user_TickTime",0)
TNT1 A 0 A_TakeFromTarget("IronDefensePP",1)
TNT1 A 0 A_JumpIfInTargetInventory("IronDefensePP",1,"Spawn")
Goto Death

Death:
TNT1 A 0 A_GiveToTarget("StatUpdator")
TNT1 A 0 A_GiveToTarget("BuffLossSoundCue")
TNT1 A 0 A_GiveToTarget("ReflectiveOff_Pickup")

TNT1 A 0 A_TakeFromTarget("STF_IronDefense",9)
TNT1 A 0 A_TakeFromTarget("IronDefense_Active",99)
TNT1 A 2 
stop
}
}
*/

actor IronDefenseParticle : BasicClientside
{
scale 2.5
speed 7
renderstyle "add"
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_SetScale(Frandom(1.5,3.5))
FX00 ABCDEFGHIJ 2 //A_ScaleVelocity(0.8)
stop
}
}

actor IronDefenseParticleSpawn : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
//TNT1 A 0 A_SpawnItemEx ("IronDefenseParticle", 0, 0, 24, random(5,10), 0, random(-2,2), random(0,360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SpawnItemEx ("IronDefenseParticle", random2(32), random2(32), 24, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
stop
Nope:
TNT1 A 0
stop
}
}
