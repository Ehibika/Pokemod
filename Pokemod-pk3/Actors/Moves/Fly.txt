Const int FLYDIVETHRUST = 64;

actor FlyMove : WepMasterBase
{
Tag "Fly"
obituary "$OB_FLY"
Weapon.AmmoUse 1
Weapon.AmmoGive 30
weapon.ammotype "FlyPP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"

var int user_FlyStartZ;
States
{
Spawn:
WEAP X 1
stop


Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_C)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 0 A_JumpIf(CallACS("FlightWorthy",0) == true,"Fire.Begin2")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin2:
"####" B 0 A_JumpIfInventory("Fly_Active",1,"Fire.Dash")
"####" B 0 A_Jump(256,"Fire.On")
Goto Fire.On

Fire.On:
"####" B 0 A_PlaySoundEx("Move/Fly","Soundslot6")
"####" B 0 ACS_NamedExecuteAlways("SetFlyTakeoffZ",0)

"####" B 1 A_GiveInventory("Fly_Active")
"####" B 0 A_GiveInventory("FlyPPTimer")
"####" B 0 A_SpawnItemEX("FLY_Watcher")
"####" B 0 A_SpawnItemEX("Fly_PPWatcher")
"####" B 0 A_TakeInventory("FlyPP",1)
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.Dash:
"####" B 0 A_TakeInventory("Fly_Active",99)
"####" A 0 A_GiveInventory("DashSet_B")
"####" B 0 A_PlaySoundEx("Weapon/FlyDive","Soundslot6")
"####" A 0 A_GiveInventory("FlyDiveInitiate")
"####" A 0 A_FireCustomMissile("GroundDustFX",0,0,0,0)
"####" AAAAAAAAAAAAA 1 A_Jumpifinventory("DashBreaker",1,"Fire.DashEnd")
"####" B 0 A_ScaleVelocity(0.2)
goto Fire.DashEnd

Fire.DashEnd:
"####" B 1 A_GiveInventory("DashSetOff")
"####" A 1 A_GiveInventory("DashSet_A")
"####" A 1 A_GiveInventory("FlyFallTimer")
Fire.DashEnd1:
TNT1 A 2 
TNT1 A 2 A_JumpIf(z-floorz==0,"Fire.DashEnd2") 
"####" B 0 A_Jumpifinventory("FlyFallTimer",1,"Fire.DashEnd1")
Goto Fire.DashEnd2

Fire.DashEnd2:
"####" B 0 A_GiveInventory("DashSetOff")
"####" B 1 A_GiveInventory("HalfRecovery_C")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End

Fire.After:
"####" B 1 A_GiveInventory("HalfRecovery_C")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End

}
}

actor FlyMove1 : FlyMove {Weapon.SlotNumber 1}
actor FlyMove2 : FlyMove {Weapon.SlotNumber 2}
actor FlyMove3 : FlyMove {Weapon.SlotNumber 3}
actor FlyMove4 : FlyMove {Weapon.SlotNumber 4}

actor FlyMove5 : FlyMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("FlyMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}

//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor FlyPP : Ammo {inventory.amount 1 inventory.Maxamount 30}
actor Fly_Active : Inventory {inventory.amount 1 inventory.Maxamount 1}
actor FlyPPTimer : Powerup {inventory.amount 1 Powerup.Duration 35}

actor FlightStress_A : Powerup {inventory.amount 1 Powerup.Duration 17}
actor FlightStress_B : Powerup {inventory.amount 1 Powerup.Duration 17}

actor FlyFallTimer : Powerup {inventory.amount 1 Powerup.Duration -3}


actor FlyFlapBuffer : Powerup {inventory.amount 1 Powerup.Duration 17}


Actor FlyDelay : powerprotection
{
Powerup.duration 5
Damagefactor "Fly", 0
}
//[+]========================================================================[+]
//---------------------------|Fly Attack|-------------------------------
//[+]========================================================================[+]
actor FlyDiveBumper : BasicProjectile
{
Speed 64
Damage (0)
radius 12
height 12
DamageType "Fly"
Obituary "$OB_FLY"
scale 1.5
//+NOINTERACTION
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_JumpIfInTargetInventory("DashBreaker",1,"Terminate")
TNT1 A 1 
TNT1 A 1 A_Explode(MBP_Fly,RAMHITBOX,0,0,RAMHITBOX)
stop

Death:
XDeath:
TNT1 A 0 A_Explode(MBP_Fly,RAMHITBOX,0,0,RAMHITBOX)
TNT1 A 1 A_GiveToTarget("FlyDiveCollision2",1)
stop

Crash:
TNT1 A 0 A_Explode(MBP_Fly,RAMHITBOX,0,0,RAMHITBOX)
Terminate:
TNT1 A 1
stop
}
}
//[+]========================================================================[+]
//--------------------------------|Special Actors|------------------------------
//[+]========================================================================[+]
actor FlyDiveWave
{
PROJECTILE
+FLOORCLIP
+THRUGHOST
+MTHRUSPECIES
+NOEXPLODEFLOOR
Radius 5
Height 5
scale 2.0
damage (0)
reactiontime 5
DamageType "Fly"
obituary "$OB_Fly"
speed 0
States
{
Spawn:
BEWA B 0

BEWA B 2 A_Fadeout
BEWA B 0 A_SetScale(2.6,2.6)

BEWA B 2 A_Fadeout
BEWA B 0 A_SetScale(2.8,2.8)

BEWA B 2 A_Fadeout
BEWA B 0 A_SetScale(3.0,3.0)

BEWA B 2 A_Fadeout
BEWA B 0 A_SetScale(3.2,3.2)

BEWA B 2 A_Fadeout
BEWA B 0 A_SetScale(3.4,3.4)

BEWA B 2 A_Fadeout
BEWA B 0 A_SetScale(3.6,3.6)
stop
Death:
BEWA A 0
stop
}
}


actor FlyDiveCollision : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("DashBreaker",1,"Nope")
TNT1 A 1 A_GiveInventory("DashBreaker",1)
TNT1 A 0 A_Stop
TNT1 A 0 A_ChangeVelocity(cos(-pitch)*-35,0,sin(pitch)*35,CVF_RELATIVE)
TNT1 A 0 ThrustThingZ(0,30,1,1)
stop
Nope:
TNT1 A 0
stop
}
}

actor FlyDiveCollision2 : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("DashBreaker",1,"Nope")
TNT1 A 1 A_GiveInventory("DashBreaker",1)
TNT1 A 0 A_Stop
stop
Nope:
TNT1 A 0
stop
}
}

actor FlyDiveThrust : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("CutterFlag",999,"Nope")
TNT1 A 0 A_JumpIfInventory("DashBreaker",1,"Nope")
TNT1 A 0 A_ChangeVelocity(cos(-pitch)*FLYDIVETHRUST,0,sin(-pitch)*FLYDIVETHRUST,CVF_RELATIVE|CVF_REPLACE)
TNT1 A 1 A_FireCustomMissile("FlyDiveBumper",0,0,0,15)
BASB A 1 A_SpawnitemEx("FlyDiveWave",cos(-pitch)*30,0,(25)+(sin(pitch)*30),0,0,0,0,SXF_TRANSFERTRANSLATION)
stop
Nope:
TNT1 A 0
stop
}
}

actor FlyDiveInitiate : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_Spawnitemex("FlyDiveWatcher")
stop
}
}

actor FlyDiveWatcher : BasicHelper 
{
Var int user_DashTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("DashBreaker",1,"Death")
TNT1 A 0 A_SetUserVar("user_DashTime",user_DashTime+1)
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 1 A_GiveToTarget("FlyDiveThrust")
TNT1 A 0 A_Jumpif(user_DashTime <= 12,"Spawn")
Goto Death
Check2:
TNT1 A 0 A_JumpIfInTargetInventory("DashBreaker",1,"Spawn")
Goto Death
Death:
DeathTake:
TNT1 A 0 //A_TakeFromTarget("FlyActive",1)
stop
}
}
//[+]========================================================================[+]
//---------------------------|Flight Actors|-------------------------------
//[+]========================================================================[+]
actor FLY_Watcher : BasicHelper 
{
Var Int User_BoostFX;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveToTarget("FLY_FlightON",1)
TNT1 A 5 A_GiveToTarget("FLY_PreThrust",1)
Flight:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 0 A_JumpIf(CallACS("FlightWorthy",AAPTR_TARGET) == false,"DeathTake")
TNT1 A 2 A_GiveToTarget("FLY_Handler",1)
TNT1 A 0 A_GiveToTarget("FLY_ThrustFX",1)
TNT1 A 1 A_JumpIfInTargetInventory("FLY_Active",1,"Flight")
Death:
DeathTake:
TNT1 A 0 A_GiveToTarget("FlyDeactivate",1)
TNT1 A 0 A_GiveToTarget("FLY_FlightOff",1)
TNT1 A 0 A_TakeFromTarget("FLY_Active",99)
TNT1 A 0
stop
}
}

actor Fly_PPWatcher : BasicHelper 
{
States
{
Spawn:
TNT1 A 0
TNT1 A 5 
TNT1 A 0 A_JumpIfInTargetInventory("FlyPPTimer",1,"Spawn")
TNT1 A 0 A_JumpIfInTargetInventory("isDead",1,"Death")
TNT1 A 0 A_GiveToTarget("FlyPPTimer")
Goto Check1

Check1:
TNT1 A 0 A_JumpIfInTargetInventory("FLY_Active",1,"Check2")
TNT1 A 0
Goto Death

Check2:
TNT1 A 0 A_JumpIfInTargetInventory("FlightStress_A",1,"Check3")
TNT1 A 0 A_TakeFromTarget("FlyPP",1)
TNT1 A 0 A_JumpIfInTargetInventory("FlyPP",1,"Spawn")
TNT1 A 0
Goto Death

Check3:
TNT1 A 0 A_TakeFromTarget("FlyPP",3)
TNT1 A 0 A_GiveToTarget("StressedFX_Spawn")
TNT1 A 0 A_JumpIfInTargetInventory("FlyPP",1,"Spawn")
TNT1 A 0
Goto Death

Death:
TNT1 A 0 A_TakeFromTarget("FLY_Active",99)
TNT1 A 0 
stop
}
}


actor FLY_FlightON : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 
TNT1 A 1 ACS_NamedExecuteAlways("core_flyplayer",0,0,2)

stop
Nope:
TNT1 A 0
stop
}
}

actor FLY_FlightOff : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 
TNT1 A 1 ACS_NamedExecuteAlways("core_flyplayer",0,0,0)

stop
Nope:
TNT1 A 0
stop
}
}


actor FLY_ThrustFX : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("FlyFlapBuffer",1,"Nope")
TNT1 A 0 A_PlaySoundEx("Weapon/FlyFlap","Soundslot7")
TNT1 A 0 A_FireCustomMissile("FLY_ThrustFXSpawn",0,0,0,0)
TNT1 A 0 A_GiveInventory("FlyFlapBuffer")
stop
Nope:
TNT1 A 0
stop
}
}

actor FLY_ThrustFXSpawn : Basicprojectile
{
speed 0
States
{
Spawn:
TNT1 A 0
TNT1 A 1 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_SpawnItemEx("GroundDustFX",-10,0,12,0,-2,-10,0)
Death:
TNT1 A 0
stop
}
}

actor FLY_PreThrust : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_CheckFloor("PreThrust")
stop
PreThrust:
TNT1 A 0 Thrustthingz(0,65,0,1)
Nope:
TNT1 A 0
stop
}
}


actor FLY_Handler : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE

var int user_FlyStartZ;
States
{
Spawn:
TNT1 A 0
stop
Pickup:
//TNT1 A 0 A_CheckFloor("End")
TNT1 A 0 A_Jumpif(z-(CallACS("GetFlyTakeoffZ")) >= 350,"Strain")
TNT1 A 0 
stop
Strain:
TNT1 A 0 A_GiveInventory("FlightStress_A")
stop
End:
TNT1 A 0 A_TakeInventory("FLY_Active",99)
TNT1 A 0
stop
}
}


actor StressedFX_Spawn : CustomInventory
{
States
{
Pickup:
TNT1 A 0
TNT1 A 0 A_SpawnItemEX("Stressed_FX",0,0,40)
stop
}
}

actor Stressed_FX : BasicClientside
{
scale 2.5
speed 7
States
{
Spawn:
TNT1 A 0
Spawn2:
FRIT CCDDEEFFGGHH 1 A_Warp(AAPTR_TARGET,0,0,60,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
FRIT IIJJKKLLMMNNOO 1 A_Warp(AAPTR_TARGET,0,0,60,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
stop
}
}