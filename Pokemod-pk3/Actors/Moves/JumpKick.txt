const int JK_Thrust = 32;

actor JumpKickMove : WepMasterBase
{
Tag "JumpKick"
obituary "$OB_JumpKick"
Weapon.AmmoUse 1
Weapon.AmmoGive 10
weapon.ammotype "JumpKickPP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
States
{
Spawn:
WEAP X 1
stop


Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_C)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 0 A_Jump(256,"Fire.DashWarmup")
Goto Fire.DashWarmup

Fire.DashWarmup:
"####" A 0 ACS_NamedExecuteAlways("TakePP",0,Move_JumpKick,1)
"####" A 0 A_GiveInventory("JumpKickWarmupTimer")
"####" A 0 A_GiveInventory("DashSet_A")
"####" A 0 A_Stop
"####" A 0 A_PlaySoundEx("weapon/ChargeKick","Weapon")
"####" B 0 A_ChangeFlag("PICKUP",0)
"####" A 0 A_GiveInventory("JumpKickLeap")
"####" B 0 
//Fire.DashWarmup1:
//"####" A 0 A_Stop
//"####" A 0 A_ChangeFlag("NOGRAVITY",1)
"####" A 1
"####" A 0 A_GiveInventory("DashSet_B")
//"####" A 1 ThrustthingZ(0,-30,0,1)
//"####" A 0 A_Jumpifinventory("JumpKickWarmupTimer",1,"Fire.DashWarmup1")
"####" B 0 A_Jump(256,"Fire.DashStart")
Goto Fire.DashWarmup

Fire.DashStart:
"####" A 0 A_GiveInventory("JumpKickTimer")
"####" A 0 A_GiveInventory("JumpKickInitiate")
"####" A 0 A_GunFlash("Flash.DashSound")
Fire.Dash:
"####" A 1 A_GiveInventory("JumpKickThrust")
"####" B 0 A_CheckFloor("Fire.DashEnd")
"####" A 0 A_Jumpifinventory("DashBreaker",1,"Fire.DashEnd")
"####" A 0 A_Jumpifinventory("JumpKickTimer",1,"Fire.Dash")
"####" A 0 A_GiveInventory("JumpKickDashFX")
goto Fire.DashEnd

Fire.DashEnd:
"####" B 0 A_ScaleVelocity(0.2)
"####" B 0 A_ChangeFlag("PICKUP",1)
"####" B 0 A_GiveInventory("DashSetOff")
"####" A 0 A_GiveInventory("DashSetOff")
"####" B 0 A_TakeInventory("JumpKickTimer",99)
"####" B 1 A_GiveInventory("PartRecovery_C")
"####" A 0 A_GiveInventory("MoveCooldown_1Half")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End


Flash.DashSound:
TNT1 A 5 A_PlaySoundEx("misc/Windloop","SoundSlot5")
"####" A 0 A_Jumpifinventory("JumpKickTimer",1,"Flash.DashSound")
stop

}
}

actor JumpKickMove1 : JumpKickMove {Weapon.SlotNumber 1}
actor JumpKickMove2 : JumpKickMove {Weapon.SlotNumber 2}
actor JumpKickMove3 : JumpKickMove {Weapon.SlotNumber 3}
actor JumpKickMove4 : JumpKickMove {Weapon.SlotNumber 4}

actor JumpKickMove5 : JumpKickMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("JumpKickMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}

//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor JumpKickPP : Ammo {inventory.amount 1 inventory.Maxamount 10}

actor JumpKickTimer : Powerup {inventory.amount 1 powerup.duration -3 }
actor JumpKickWarmupTimer : Powerup {inventory.amount 1 powerup.duration 5 }

Actor JumpKickDelay : powerprotection
{
Powerup.duration 5
Damagefactor "JumpKick", 0
}


//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]
actor JumpKickBumper : BasicProjectile
{
Speed 32
Damage (0)
radius 6
height 6
DamageType "JumpKick"
Obituary "$OB_JumpKick"
scale 1.5
//+NOINTERACTION
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_JumpIfInTargetInventory("DashBreaker",1,"Terminate")
TNT1 A 1 
TNT1 A 1 A_Explode(MBP_JumpKick,RAMHITBOX,0,0,RAMHITBOX)
stop
Death:
TNT1 A 0 A_Explode(MBP_JumpKick,RAMHITBOX,0,0,RAMHITBOX)
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 1 A_GiveToTarget("JumpKickCollision2",1)
TNT1 A 0 A_SpawnItemEx("BasicMeleeFX", 0, 0, 0, 0, 0, 0, 0,1)
Crash:
TNT1 A 0 A_Explode(MBP_JumpKick,RAMHITBOX,0,0,RAMHITBOX)
Terminate:
TNT1 A 1
stop
}
}
//[+]========================================================================[+]
//--------------------------------|Special Actors|------------------------------
//[+]========================================================================[+]

actor JumpKickWave
{
PROJECTILE
+FLOORCLIP
+THRUGHOST
+MTHRUSPECIES
+NOEXPLODEFLOOR
Radius 5
Height 5
scale 2.0
damage (0)
reactiontime 3
DamageType "JumpKick"
obituary "$OB_JumpKick"
speed 0
States
{
Spawn:
BEWA B 0

BEWA B 1 A_Fadeout
BEWA B 0 A_SetScale(ScaleX+0.3)
BEWA B 0 A_CountDown
loop
Death:
BEWA A 0
stop
}
}


actor JumpKickCollision : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("DashBreaker",1,"Nope")
TNT1 A 1 A_GiveInventory("DashBreaker",1)
TNT1 A 0 A_Stop
TNT1 A 0 A_ChangeVelocity(cos(-pitch)*-35,0,sin(pitch)*35,CVF_RELATIVE)
TNT1 A 0 ThrustThingZ(0,30,1,1)
stop
Nope:
TNT1 A 0
stop
}
}

actor JumpKickCollision2 : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("DashBreaker",1,"Nope")
TNT1 A 0 A_PlaySoundEx("weapon/Rebound","SoundSlot5")
TNT1 A 0 ACS_NamedExecuteAlways("PKMN_CollisionDamager",0,MBP_JumpKick)
//TNT1 A 0 DamageThing(MBP_JumpKick*(CallACS("StatValueRamp",STAT_PATK,1,400)*0.01))
TNT1 A 1 A_GiveInventory("DashBreaker",1)
TNT1 A 0 A_Stop
stop
Nope:
TNT1 A 0
stop
}
}

actor JumpKickLeap : CustomInventory
{
states
{
pickup:
TNT1 A 0 //A_JumpIf(pitch<350 && pitch>=270, "UpLimit")
goto Pickup2
UpLimit:
TNT1 A 0 A_SetPitch(350)
Pickup2:
TNT1 A 0 A_CheckFloor("Leap")
TNT1 A 0 A_ChangeVelocity(cos(Angle)*HJK_Thrust,sin(Angle)*HJK_Thrust,sin(-(Pitch))*JK_Thrust,CVF_REPLACE)
stop
Leap:
TNT1 A 0 ThrustthingZ(0,35+sin(-(Pitch))*70,0,0)
stop
}
}

actor JumpKickThrust : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("CutterFlag",999,"Nope")
TNT1 A 0 A_JumpIfInventory("DashBreaker",1,"Nope")
TNT1 A 0 A_ChangeVelocity(cos(Angle)*JK_Thrust,sin(Angle)*JK_Thrust,Momz,CVF_REPLACE)//cos(-pitch)* , sin(-pitch)*JK_Thrust
TNT1 A 1 A_FireCustomMissile("JumpKickBumper",0,0,0,15,0,Pitch) //
TNT1 A 1 A_FireCustomMissile("JumpKickBumper",0,0,0,15,0,0) //
BASB A 1 A_SpawnitemEx("JumpKickWave",cos(Angle)*30,0,(25),0,0,0,0,SXF_TRANSFERTRANSLATION) //+(sin(pitch)*30)
stop
Nope:
TNT1 A 0
stop
}
}

actor JumpKickDashFX : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIf(Z-FloorZ <= 200,"Nope")
TNT1 A 0 A_SpawnItemEX("GroundDustFX",-25,0,-(z-floorz),0)
stop
Nope:
TNT1 A 0
stop
}
}

actor JumpKickInitiate : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_Spawnitemex("JumpKickWatcher")
stop
}
}

actor JumpKickWatcher : BasicHelper 
{
Var int user_DashTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("DashBreaker",1,"Death")
TNT1 A 0 A_SetUserVar("user_DashTime",user_DashTime+1)
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 3 A_GiveToTarget("JumpKickThrust")
TNT1 A 0 A_JumpIfInTargetInventory("JumpKickTimer",1,"Spawn")
//TNT1 A 0 A_Jumpif(user_DashTime <= 6,"Spawn")
Goto Death
Check2:
TNT1 A 0 A_JumpIfInTargetInventory("DashBreaker",1,"Spawn")
Goto Death
Death:
DeathTake:
TNT1 A 0 //A_TakeFromTarget("JumpKickActive",1)
stop
}
}

