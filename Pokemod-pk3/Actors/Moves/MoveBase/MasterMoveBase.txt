//Recovery Constants
const int RC_A = 1;
const int RC_B = 2;
const int RC_C = 4;
const int RC_D = 8;

const int RC_NOCOOL = 16;

actor WepMasterBase0 : Weapon
{
Weapon.AmmoUse 1
Weapon.AmmoGive 3
Weapon.AmmoUse2 1
Weapon.AmmoGive2 3
Weapon.SlotNumber 1
Weapon.SlotPriority 0
scale 2.0
Obituary "$OB_GENERIC"
inventory.icon "NULLICON"
Inventory.Pickupmessage "$PU_MEGABUSTER"
weapon.ammotype "BusterPower"
weapon.ammotype2 "BusterPower"
+WEAPON.ALT_AMMO_OPTIONAL
+WEAPON.AMMO_OPTIONAL
+WEAPON.DONTBOB
//+WEAPON.NOAUTOFIRE
+WEAPON.NOAUTOAIM
States
{
Spawn:
WEAP X 1
stop
Ready:
TNT1 A 0 A_JumpifInventory("PlayerPropertyFrozen",1,"NotReady")
TNT1 A 0 A_JumpifInventory("PKMN_PlayerFullFreeze",1,"NotReady")

TNT1 A 0 A_JumpifInventory("SleepMark",1,"SleepReady")
TNT1 A 0 A_JumpifInventory("FreezeMark",1,"FreezeReady")
TNT1 A 0 A_JumpifInventory("ConfusionMark",1,"ConfusionReady")
TNT1 A 0 A_JumpIf(CallACS("HasFlagBall") == 1,"CarrierReady")

TNT1 A 1 A_WeaponReady(WRF_ALLOWRELOAD) //|WRF_NOSECONDARY
//TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ALTATTACK) == 1,"Altfire")
Goto Ready

NotReady: //for the training room
TNT1 A 1
TNT1 A 0 A_JumpifInventory("PlayerPropertyFrozen",1,"NotReady")
TNT1 A 17
Goto Ready

FreezeReady:
SleepReady:
TNT1 A 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_NOSECONDARY) //|WRF_NOSECONDARY
//TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ATTACK) == 1,"Fire")
Goto Ready

CarrierReady:
TNT1 A 1 A_WeaponReady(WRF_NOPRIMARY|WRF_NOSECONDARY)
TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ATTACK) == 1,"CarrierToss")
TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ALTATTACK) == 1,"CarrierToss")
Goto Ready
CarrierToss:
TNT1 A 17 A_GiveInventory("PKMN_WhiteFlagThrower") 
Goto Ready

ConfusionReady:
TNT1 A 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_NOPRIMARY|WRF_NOSECONDARY) 
TNT1 A 0 A_Refire("ConfusionWack")
TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ATTACK) == 1,"ConfusionWack")
TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ALTATTACK) == 1,"ConfusionWack")
Goto Ready
ConfusionWack:
TNT1 A 0 A_JumpifInventory("Recovery_A",1,"NoAmmo")
TNT1 A 0 A_JumpifInventory("Recovery_B",1,"NoAmmo")
TNT1 A 0 A_JumpifInventory("Recovery_C",1,"NoAmmo")
TNT1 A 0 A_JumpifInventory("Recovery_D",1,"NoAmmo")

TNT1 A 0 A_PlaySoundEx("Move/Basic","Weapon")
TNT1 A 0 ACS_NamedExecuteAlways("PKMN_CollisionDamager",0,MBP_StandardPower)
TNT1 A 0 A_SpawnItemEx("BasicMeleeFX", 0, 0, 0, 0, 0, 0, 0,1)
TNT1 A 0 A_JumpIfInventory("isbot",1,"ConfusionBot") 
TNT1 A 0 A_Refire("ConfusionWack_A")
//TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ATTACK) == 1,"ConfusionWack_A")
TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ALTATTACK) == 1,"ConfusionWack_B")
Goto Ready

ConfusionWack_A:
TNT1 A 7
TNT1 A 0 A_Jump(256,"Fire")
Goto Fire

ConfusionWack_B:
TNT1 A 7
TNT1 A 0 A_Jump(256,"Altfire")
Goto Altfire

ConfusionBot:
TNT1 A 7
TNT1 A 0 A_Refire("Fire")
Goto Ready

Deselect:
TNT1 A 0 ACS_NamedExecuteAlways("MoveSwap",0)
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
TNT1 A 1 A_Lower
Loop
Select:
TNT1 A 0 ACS_NamedExecuteAlways("MoveSetup",0)
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
TNT1 A 1 A_Raise
Loop
Fire:
TNT1 A 1 
goto Ready


AltFire:
TNT1 A 0 
TNT1 A 0 A_JumpifInventory("Recovery_B",1,"NoAmmo")
TNT1 A 0 A_Jump(256,"AltFire.Melee")
Goto AltFire.Melee

AltFire.Melee:
TNT1 A 0 A_PlaySoundEx("Move/Basic","Weapon")
TNT1 A 0 A_FireCustomMissile("BasicMeleeAttack",0,0,0,0)
TNT1 A 0 A_Jump(256,"AltFire.After")
Goto AltFire.After

AltFire.After:
TNT1 A 1 A_JumpifInventory("PKMNRageFlag",1,"AltFire.RageAfter")
TNT1 A 0 A_GiveInventory("PartRecovery_A") 
//TNT1 A 0 A_GiveInventory("FullRecovery_B")  //Now G.attack Specific
TNT1 A 0 A_GiveInventory("PartRecovery_C") 
TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ALTATTACK) == 1,"Altfire")
//TNT1 A 0 A_REfire("AltFire")
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready

AltFire.RageAfter:
TNT1 A 1 A_GiveInventory("5Recovery_A") 
//TNT1 A 0 A_GiveInventory("PartRecovery_B")  //Now G.attack Specific
TNT1 A 0 A_GiveInventory("5Recovery_C") 
TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ALTATTACK) == 1,"Altfire")
//TNT1 A 0 A_REfire("AltFire")
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready

Fire.End:
TNT1 A 0
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready


NoAmmo:
TNT1 A 1 A_JumpIfNoAmmo("NoAmmo2")
TNT1 A 0 A_TakeInventory("WeaponCharge",999)
TNT1 A 0 A_JumpIf(CallACS("IsMoveDisabled") == 1,"NoAmmo2")
TNT1 A 0 
TNT1 A 0 A_Jump(256,"Fire.End")
Goto Fire.End

NoAmmo2:
TNT1 A 1 ACS_Execute(979,0)
TNT1 A 0 A_TakeInventory("WeaponCharge",999)
TNT1 A 0 
TNT1 A 0 A_Jump(256,"Fire.End")
Goto Fire.End

Reload:
TNT1 A 0 A_GiveInventory("PPRecoveryItem") 
TNT1 A 0 A_Jump(256,"Fire.End")
Goto Fire.End

Flash:
TNT1 A 1
stop
NoFlash:
TNT1 A 1
stop
}
}

//#region  -=- Generic Attacks -=-

actor GATK_Tackle : Once {}
actor GATK_Pound : Once {}
actor GATK_Scratch : Once {}
actor GATK_Jab : Once {}
actor GATK_Lash : Once {}

actor BasicMeleeAttack : BasicProjectile
{
Speed 45
Damage (0)
DamageType "Melee"
height 16
radius 12
scale 2.5
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
Spawn2:
TNT1 A 0 
TNT1 A 1
TNT1 A 0 A_Stop
Goto Death

Death:
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 0 A_Explode(MBP_StandardPower+CallACS("GenericAttackPower",5),32,0,0,32)
TNT1 A 0 A_SpawnItemEx("BasicMeleeFX", 0, 0, 0, 0, 0, 0, 0,1)
TNT1 A 5
stop
}
}

actor BasicMeleeFX : BasicClientside
{
scale 2.5
ReactionTime 5
States
{
Spawn:
CRBM A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
SPKH ABCD 1 A_SetScale(Scalex+0.5)
Spawn2:
SPKH D 0 A_SetScale(Scalex+0.5)
SPKH D 1 A_Fadeout
SPKH D 0 A_CountDown
loop
Death:
SPKH D 1
stop
}
}


//#endregion

actor SpawnInBuffer : Powerup {inventory.amount 1 Powerup.Duration 17}


actor Recovery_A : Powerup {inventory.amount 1 Powerup.Duration 35}
actor Recovery_B : Recovery_A {}
actor Recovery_C : Recovery_A {}
actor Recovery_D : Recovery_A {}

actor FullRecovery_A : PowerupGiver
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
Powerup.Duration 35
powerup.type "Recovery_A"
}

actor 3Recovery_A : FullRecovery_A{Powerup.Duration 3}
actor 5Recovery_A : FullRecovery_A{Powerup.Duration 5}
actor SemiRecovery_A : FullRecovery_A{Powerup.Duration 20}
actor HalfRecovery_A : FullRecovery_A{Powerup.Duration 17}
actor PartRecovery_A : FullRecovery_A{Powerup.Duration 7}

actor FullRecovery_B : PowerupGiver
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
Powerup.Duration 35
powerup.type "Recovery_B"
}

actor 3Recovery_B : FullRecovery_B{Powerup.Duration 3}
actor 5Recovery_B : FullRecovery_B{Powerup.Duration 5}
actor SemiRecovery_B : FullRecovery_B{Powerup.Duration 20}
actor HalfRecovery_B : FullRecovery_B{Powerup.Duration 17}
actor PartRecovery_B : FullRecovery_B{Powerup.Duration 7}

actor FullRecovery_C : PowerupGiver
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
Powerup.Duration 35
powerup.type "Recovery_C"
}

actor 3Recovery_C : FullRecovery_C{Powerup.Duration 3}
actor 5Recovery_C : FullRecovery_C{Powerup.Duration 5}
actor SemiRecovery_C : FullRecovery_C{Powerup.Duration 20}
actor HalfRecovery_C : FullRecovery_C{Powerup.Duration 17}
actor PartRecovery_C : FullRecovery_C{Powerup.Duration 7}


actor FullRecovery_D : PowerupGiver
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
Powerup.Duration 35
powerup.type "Recovery_D"
}

actor 3Recovery_D : FullRecovery_D{Powerup.Duration 3}
actor 5Recovery_D : FullRecovery_D{Powerup.Duration 5}
actor SemiRecovery_D : FullRecovery_D{Powerup.Duration 20}
actor HalfRecovery_D : FullRecovery_D{Powerup.Duration 17}
actor PartRecovery_D : FullRecovery_D{Powerup.Duration 7}
/*
actor MoveRecoveryHandler : BasicHelper 
{
+MISSILE
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("isDead",1,"Death")
TNT1 A 1 //a_log("bing")
TNT1 A 0 A_JumpIfInTargetInventory("Recovery_A",1,"RecoverTake")
TNT1 A 0 A_JumpIfInTargetInventory("Recovery_B",1,"RecoverTake")
TNT1 A 0 A_JumpIfInTargetInventory("Recovery_C",1,"RecoverTake")
loop

RecoverTake:
TNT1 A 0 //a_log("Bong")
TNT1 A 0 A_TakeFromTarget("Recovery_A",1)
TNT1 A 0 A_TakeFromTarget("Recovery_B",1)
TNT1 A 0 A_TakeFromTarget("Recovery_C",1)
Goto Spawn

Death:
TNT1 A 0 
stop
}
}

actor MoveRecovery : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 //A_SpawnitemEX("MoveRecoveryHandler")
TNT1 A 1 //a_log("Recovery checking in")
stop

}
}

*/



actor RemoteKiller : Powerup {inventory.amount 1 Powerup.Duration 5}

actor DeclineSoundCue : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 1 ACS_Execute(979,0)
stop
}
}
//[+]========================================================================[+]
//-----------------------------|PP Recovery|------------------------------
//[+]========================================================================[+]

actor PPRecoveryMeter : Inventory {inventory.amount 1 inventory.MaxAmount 100}
actor HalfPPFlag : Once {}
actor FullPPFlag : Once {}

actor PPRecoveryHandler : BasicHelper 
{
+MISSILE
States
{
Spawn:
TNT1 A 0
TNT1 A 1
Goto Jumps

Jumps:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("isDead",1,"Death")

TNT1 A 0 A_JumpIfInTargetInventory("ChoiceBandPower",1,"RecoverStall")
TNT1 A 0 A_JumpIfInTargetInventory("STF_ChoiceScarf",1,"RecoverStall")
TNT1 A 0 A_JumpIfInTargetInventory("FocusBandProtectFlag",1,"RecoverStall")


TNT1 A 0 A_JumpIfInTargetInventory("PPBurnStall",1,"RecoverStall")
TNT1 A 0 A_JumpIfInTargetInventory("PPRecoveryMeter",100,"RecoverStall")
TNT1 A 1 A_JumpIF(CallACS("GetMoveRecoveryLVL",AAPTR_TARGET) > 0,"SlowRecoverPP")
Goto RecoverPP

RecoverStall:
TNT1 A 7
Goto Spawn


SlowRecoverPP:
TNT1 A 0 //a_logint(CallACS("GetMoveRecoveryLVL",AAPTR_TARGET)*3)
TNT1 A 0 A_GiveToTarget("PPRecoveryMeter",2)
TNT1 A 0 A_SetArg(0,CallACS("GetMoveRecoveryLVL",AAPTR_TARGET)*3)
SlowRecoverPP2:
TNT1 A 1 A_SetArg(0,args[0]-1)
TNT1 A 1 A_JumpIf(args[0]>0,"SlowRecoverPP2")
Goto Spawn

RecoverPP:
TNT1 A 0 //a_log("Bong")
TNT1 A 0 A_GiveToTarget("PPRecoveryMeter",2)
TNT1 A 1
Goto Spawn

Death:
TNT1 A 0 
stop
}
}

actor PPRecovery : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_SpawnitemEX("PPRecoveryHandler")
TNT1 A 1 //a_log("Recovery checking in")
stop
}
}

actor PPRecoveryItem : WeaponEnergy 
{
inventory.pickupmessage "Recovered PP"
States
{
Spawn:
EBAL A 0
EBAL A 1 
loop

Pickup:
TNT1 A 0 A_JumpIfInventory("PPRecoveryMeter",100,"Pickup1")
fail

Pickup1:
TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(984,0),"Success")
Goto UseFail

Success:
EBAL E 0 A_PlaySoundEx("item/refill","Voice")
EBAL E 0 ACS_Execute(992, 0, 100)
TNT1 A 0 A_SpawnitemEX("ConsumeFX",0,0,0,0,0,0,0,1)
TNT1 A 0 A_TakeInventory("PPRecoveryMeter",100)
TNT1 A 0 A_GiveInventory("HeldCheck_Recovery",1)
stop
}
}


//[+]========================================================================[+]
//-----------------------------|Status Changes|------------------------------
//[+]========================================================================[+]

const int Stat_UpS = 2;
const int Stat_DownS = -3;
const int Stat_X = 30;
const int Stat_UpZ = 10;
const int Stat_DownZ = 80;

actor StXFBuffer : Powerup {inventory.amount 1 Powerup.Duration 8}


actor SpawnStatusParticles : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("StXFBuffer",1,"Nope")
TNT1 A 0 A_GiveInventory("SSP_ATK")
TNT1 A 0 A_GiveInventory("SSP_SATK")
TNT1 A 0 A_GiveInventory("SSP_DEF")
TNT1 A 0 A_GiveInventory("SSP_SDEF")
TNT1 A 0 A_GiveInventory("SSP_SPD")
TNT1 A 0 A_GiveInventory("StXFBuffer")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor SSP_ATK : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIf(CallACS("GetStatMod",0,0) > 0,"StatUp")
TNT1 A 0 A_JumpIf(CallACS("GetStatMod",0,0) < 0,"StatDown")
stop
StatDown:
TNT1 A 0 A_SpawnItemEx("PatkDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
StatUp:
TNT1 A 0 A_SpawnItemEx("PatkUpFX",Stat_X,0,0,0,0,3,random(0,360))
stop
}
}

actor SSP_SATK : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIf(CallACS("GetStatMod",0,1) > 0,"StatUp")
TNT1 A 0 A_JumpIf(CallACS("GetStatMod",0,1) < 0,"StatDown")
stop
StatDown:
TNT1 A 0 A_SpawnItemEx("SatkDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
StatUp:
TNT1 A 0 A_SpawnItemEx("SatkUpFX",Stat_X,0,0,0,0,3,random(0,360))
stop
}
}

actor SSP_DEF : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIf(CallACS("GetStatMod",0,2) > 0,"StatUp")
TNT1 A 0 A_JumpIf(CallACS("GetStatMod",0,2) < 0,"StatDown")
stop
StatDown:
TNT1 A 0 A_SpawnItemEx("PdefDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
StatUp:
TNT1 A 0 A_SpawnItemEx("PdefUpFX",Stat_X,0,0,0,0,3,random(0,360))
stop
}
}

actor SSP_SDEF : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIf(CallACS("GetStatMod",0,3) > 0,"StatUp")
TNT1 A 0 A_JumpIf(CallACS("GetStatMod",0,3) < 0,"StatDown")
stop
StatDown:
TNT1 A 0 A_SpawnItemEx("SdefDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
StatUp:
TNT1 A 0 A_SpawnItemEx("SdefUpFX",Stat_X,0,0,0,0,3,random(0,360))
stop
}
}

actor SSP_SPD : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIf(CallACS("GetStatMod",0,4) > 0,"StatUp")
TNT1 A 0 A_JumpIf(CallACS("GetStatMod",0,4) < 0,"StatDown")
stop
StatDown:
TNT1 A 0 A_SpawnItemEx("SpdDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
StatUp:
TNT1 A 0 A_SpawnItemEx("SpdUpFX",Stat_X,0,0,0,0,3,random(0,360))
stop
}
}


actor StatDownFX 
{
PROJECTILE
+NOINTERACTION
+DONTBLAST
+CLIENTSIDEONLY
Speed 0
radius 5
height 5
scale 2.0
Renderstyle "Translucent"
Alpha 0.8
States
{
Spawn:
ICMS A 0
TNT1 A 1 A_JumpIf(CallACS("Check_ShowStatParticles")!=1,"Death")
POWU CDCD 2
POWU CDCD 2 A_Fadeout
stop
Death:
TNT1 A 1
stop
}
}

actor PatkDownFX : StatDownFX {Translation "192:192=174:174", "198:198=44:44"}
actor SatkDownFX : StatDownFX {Translation "192:192=69:69", "198:198=75:75"}
actor PdefDownFX : StatDownFX {Translation "192:192=160:160", "198:198=229:229"}
actor SdefDownFX : StatDownFX {Translation "192:192=108:108", "198:198=113:113"}
actor SpdDownFX : StatDownFX {Translation "192:192=236:236", "198:198=239:239"}

actor StatDownFXSpawn : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_SpawnItemEx("StatDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor PatkDownFXSpawn : StatDownFXSpawn
{
States
{
Pickup:
TNT1 A 0 A_SpawnItemEx("PatkDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
}}

actor SatkDownFXSpawn : StatDownFXSpawn
{
States
{
Pickup:
TNT1 A 0 A_SpawnItemEx("SatkDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
}}

actor PdefDownFXSpawn : StatDownFXSpawn
{
States
{
Pickup:
TNT1 A 0 A_SpawnItemEx("PdefDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
}}

actor SdefDownFXSpawn : StatDownFXSpawn
{
States
{
Pickup:
TNT1 A 0 A_SpawnItemEx("SdefDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
}}

actor SpdDownFXSpawn : StatDownFXSpawn
{
States
{
Pickup:
TNT1 A 0 A_SpawnItemEx("SpdDownFX",Stat_X,0,Stat_DownZ,0,0,Stat_DownS,random(0,360))
stop
}}

actor StatUpFX : StatDownFX
{
States
{
Spawn:
ICMS A 0
TNT1 A 1 A_JumpIf(CallACS("Check_ShowStatParticles")!=1,"Death")
POWU ABAB 2
POWU ABAB 2 A_Fadeout
stop
Death:
TNT1 A 1
stop
}
}


actor PatkUpFX : StatUpFX {Translation "192:192=174:174", "198:198=44:44"}
actor SatkUpFX : StatUpFX {Translation "192:192=69:69", "198:198=75:75"}
actor PdefUpFX : StatUpFX {Translation "192:192=160:160", "198:198=229:229"}
actor SdefUpFX : StatUpFX {Translation "192:192=108:108", "198:198=113:113"}
actor SpdUpFX : StatUpFX {Translation "192:192=236:236", "198:198=239:239"}

actor StatUpFXSpawn : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_SpawnItemEx("StatUpFX",Stat_X,0,0,0,0,3,random(0,360))
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor PatkUpFXSpawn : StatUpFXSpawn
{
States
{
Pickup:
TNT1 A 0 A_SpawnItemEx("PatkUpFX",Stat_X,0,Stat_UpZ,0,0,Stat_UpS,random(0,360))
stop
}}

actor SatkUpFXSpawn : StatUpFXSpawn
{
States
{
Pickup:
TNT1 A 0 A_SpawnItemEx("SatkUpFX",Stat_X,0,Stat_UpZ,0,0,Stat_UpS,random(0,360))
stop
}}

actor PdefUpFXSpawn : StatUpFXSpawn
{
States
{
Pickup:
TNT1 A 0 A_SpawnItemEx("PdefUpFX",Stat_X,0,Stat_UpZ,0,0,Stat_UpS,random(0,360))
stop
}}

actor SdefUpFXSpawn : StatUpFXSpawn
{
States
{
Pickup:
TNT1 A 0 A_SpawnItemEx("SdefUpFX",Stat_X,0,Stat_UpZ,0,0,Stat_UpS,random(0,360))
stop
}}

actor SpdUpFXSpawn : StatUpFXSpawn
{
States
{
Pickup:
TNT1 A 0 A_SpawnItemEx("SpdUpFX",Stat_X,0,Stat_UpZ,0,0,Stat_UpS,random(0,360))
stop
}}



actor StatUpdator : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 ACS_NamedExecuteAlways("StatUpdate",0)
stop
}
}


actor EVOEffect
{
renderstyle translucent
+NOINTERACTION
+FORCEXYBILLBOARD
+CLIENTSIDEONLY
height 1
radius 1
alpha 1.0
scale 3.0
-SOLID
+NOGRAVITY
states
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCodeSyncTarget",1)
FST2 ABCDEF 1 A_FadeOut(0.12)
stop
}
}


actor EvolutionFX : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_SpawnItemEx("EVOEffect",0,0,22,0,0,0,0)
BUST B 0 A_PlaySoundEx("Misc/Evolution","Soundslot9")
stop
Nope:
TNT1 A 0
stop
}
}

actor ImbueOnFX : BasicClientside
{
Scale 4.0
States
{
Spawn:
TNT1 A 0
TCEX F 0 A_SetScale(Scalex-0.5)
TCEX FF 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TCEX E 0 A_SetScale(Scalex-0.5)
TCEX EE 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TCEX D 0 A_SetScale(Scalex-0.5)
TCEX DD 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TCEX C 0 A_SetScale(Scalex-0.5)
TCEX CC 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TCEX B 0 A_SetScale(Scalex-0.5)
TCEX BB 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TCEX A 0 A_SetScale(Scalex-0.5)
TCEX AA 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TNT1 A 0 A_Stop
Goto Death

Death:
TNT1 A 1 
stop
}
}

actor ImbueOffFX : BasicClientside
{
Scale 1.0
States
{
Spawn:
TNT1 A 0
TCEX A 0 A_SetScale(Scalex+0.5)
TCEX AA 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TCEX B 0 A_SetScale(Scalex+0.5)
TCEX BB 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TCEX C 0 A_SetScale(Scalex+0.5)
TCEX CC 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TCEX D 0 A_SetScale(Scalex+0.5)
TCEX DD 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TCEX E 0 A_SetScale(Scalex+0.5)
TCEX EE 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TCEX F 0 A_SetScale(Scalex+0.5)
TCEX FF 1 A_Warp(AAPTR_TARGET,0,0,22,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TNT1 A 0 A_Stop
Goto Death

Death:
TNT1 A 1 
stop
}
}

actor CooldownSlot1 : Inventory {inventory.amount 3500 inventory.MaxAmount 3500}
actor CooldownSlot2 : Inventory {inventory.amount 3500 inventory.MaxAmount 3500}
actor CooldownSlot3 : Inventory {inventory.amount 3500 inventory.MaxAmount 3500}
actor CooldownSlot4 : Inventory {inventory.amount 3500 inventory.MaxAmount 3500}

actor CooldownWatcherBase : BasicHelper 
{
+MISSILE
Args 3,1
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("isDead",1,"Death")
TNT1 A 1 //a_log("bing")
TNT1 A 0 A_JumpIf(Args[1] <= 1,"Slot1Cooldown")
TNT1 A 0 A_JumpIf(Args[1] == 2,"Slot2Cooldown")
TNT1 A 0 A_JumpIf(Args[1] == 3,"Slot3Cooldown")
TNT1 A 0 A_JumpIf(Args[1] >= 4,"Slot4Cooldown")
loop

Slot1Cooldown:
TNT1 A 0 //a_log("Bong")
TNT1 A 0 A_TakeFromTarget("CooldownSlot1",Args[0])
TNT1 A 1 A_JumpIfInTargetInventory("CooldownSlot1",1,"Spawn")
Goto Death

Slot2Cooldown:
TNT1 A 0 //a_log("Bong")
TNT1 A 0 A_TakeFromTarget("CooldownSlot2",Args[0])
TNT1 A 1 A_JumpIfInTargetInventory("CooldownSlot2",1,"Spawn")
Goto Death

Slot3Cooldown:
TNT1 A 0 //a_log("Bong")
TNT1 A 0 A_TakeFromTarget("CooldownSlot3",Args[0])
TNT1 A 1 A_JumpIfInTargetInventory("CooldownSlot3",1,"Spawn")
Goto Death

Slot4Cooldown:
TNT1 A 0 //a_log("Bong")
TNT1 A 0 A_TakeFromTarget("CooldownSlot4",Args[0])
TNT1 A 1 A_JumpIfInTargetInventory("CooldownSlot4",1,"Spawn")
Goto Death

Death:
TNT1 A 0 
stop
}
}

actor Cooldown1_1HalfSec : CooldownWatcherBase {args 66,1}
actor Cooldown1_3Sec : CooldownWatcherBase {args 33,1}
actor Cooldown1_5Sec : CooldownWatcherBase {args 20,1}
actor Cooldown1_7Sec : CooldownWatcherBase {args 14,1}
actor Cooldown1_10Sec : CooldownWatcherBase {args 10,1}
actor Cooldown1_12Sec : CooldownWatcherBase {args 8,1}

actor Cooldown2_1HalfSec : CooldownWatcherBase {args 66,2}
actor Cooldown2_3Sec : CooldownWatcherBase {args 33,2}
actor Cooldown2_5Sec : CooldownWatcherBase {args 20,2}
actor Cooldown2_7Sec : CooldownWatcherBase {args 14,2}
actor Cooldown2_10Sec : CooldownWatcherBase {args 10,2}
actor Cooldown2_12Sec : CooldownWatcherBase {args 8,2}

actor Cooldown3_1HalfSec : CooldownWatcherBase {args 66,3}
actor Cooldown3_3Sec : CooldownWatcherBase {args 33,3}
actor Cooldown3_5Sec : CooldownWatcherBase {args 20,3}
actor Cooldown3_7Sec : CooldownWatcherBase {args 14,3}
actor Cooldown3_10Sec : CooldownWatcherBase {args 10,3}
actor Cooldown3_12Sec : CooldownWatcherBase {args 8,3}

actor Cooldown4_1HalfSec : CooldownWatcherBase {args 66,4}
actor Cooldown4_3Sec : CooldownWatcherBase {args 33,4}
actor Cooldown4_5Sec : CooldownWatcherBase {args 20,4}
actor Cooldown4_7Sec : CooldownWatcherBase {args 14,4}
actor Cooldown4_10Sec : CooldownWatcherBase {args 10,4}
actor Cooldown4_12Sec : CooldownWatcherBase {args 8,4}

actor MoveCooldown_10 : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 //ACS_NamedExecuteAlways("StatUpdate",0) GetCurrentWepSlot
TNT1 A 0 A_JumpIf(CallACS("GetCurrentWepSlot") == 1,"Slot1")
TNT1 A 0 A_JumpIf(CallACS("GetCurrentWepSlot") == 2,"Slot2")
TNT1 A 0 A_JumpIf(CallACS("GetCurrentWepSlot") == 3,"Slot3")
TNT1 A 0 A_JumpIf(CallACS("GetCurrentWepSlot") == 4,"Slot4")
stop

Slot1:
TNT1 A 0 A_GiveInventory("CooldownSlot1",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown1_10Sec")
stop

Slot2:
TNT1 A 0 A_GiveInventory("CooldownSlot2",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown2_10Sec")
stop

Slot3:
TNT1 A 0 A_GiveInventory("CooldownSlot3",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown3_10Sec")
stop

Slot4:
TNT1 A 0 A_GiveInventory("CooldownSlot4",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown4_10Sec")
stop
}
}

actor MoveCooldown_7 : MoveCooldown_10
{
States
{
Slot1:
TNT1 A 0 A_GiveInventory("CooldownSlot1",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown1_7Sec")
stop

Slot2:
TNT1 A 0 A_GiveInventory("CooldownSlot2",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown2_7Sec")
stop

Slot3:
TNT1 A 0 A_GiveInventory("CooldownSlot3",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown3_7Sec")
stop

Slot4:
TNT1 A 0 A_GiveInventory("CooldownSlot4",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown4_7Sec")
stop
}
}

actor MoveCooldown_5 : MoveCooldown_10
{
States
{
Slot1:
TNT1 A 0 A_GiveInventory("CooldownSlot1",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown1_5Sec")
stop

Slot2:
TNT1 A 0 A_GiveInventory("CooldownSlot2",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown2_5Sec")
stop

Slot3:
TNT1 A 0 A_GiveInventory("CooldownSlot3",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown3_5Sec")
stop

Slot4:
TNT1 A 0 A_GiveInventory("CooldownSlot4",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown4_5Sec")
stop
}
}

actor MoveCooldown_3 : MoveCooldown_10
{
States
{
Slot1:
TNT1 A 0 A_GiveInventory("CooldownSlot1",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown1_3Sec")
stop

Slot2:
TNT1 A 0 A_GiveInventory("CooldownSlot2",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown2_3Sec")
stop

Slot3:
TNT1 A 0 A_GiveInventory("CooldownSlot3",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown3_3Sec")
stop

Slot4:
TNT1 A 0 A_GiveInventory("CooldownSlot4",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown4_3Sec")
stop
}
}

actor MoveCooldown_1Half : MoveCooldown_10
{
States
{
Slot1:
TNT1 A 0 A_GiveInventory("CooldownSlot1",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown1_1HalfSec")
stop

Slot2:
TNT1 A 0 A_GiveInventory("CooldownSlot2",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown2_1HalfSec")
stop

Slot3:
TNT1 A 0 A_GiveInventory("CooldownSlot3",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown3_1HalfSec")
stop

Slot4:
TNT1 A 0 A_GiveInventory("CooldownSlot4",3500)
TNT1 A 0 A_SpawnItemEx("Cooldown4_1HalfSec")
stop
}
}