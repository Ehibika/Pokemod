const int Acrobatics_TURNSPD = 14;
const int Acrobatics_DashSPD = 60;
const int Acrobatics_JumpCap = 90;

actor AcrobaticsMove : WepMasterBase
{
Tag "Acrobatics"
obituary "$OB_Acrobatics"
Weapon.AmmoUse 1
Weapon.AmmoGive 10
weapon.ammotype "AcrobaticsPP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
States
{
Spawn:
WEAP X 1
stop


Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_B)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 1 A_Jump(256,"Fire.DashWarmup")
Goto Fire.DashWarmup

Fire.DashWarmup:
"####" A 0 ACS_NamedExecuteAlways("TakePP",0,Move_Acrobatics,1)
"####" A 0 A_GiveInventory("AcrobaticsWarmupTimer")
"####" A 0 A_GiveInventory("AcrobaticsSpaceCheck")
"####" A 0 A_GiveInventory("DashSet_A")
"####" A 0 A_SetTranslucent(0.0,0)
"####" A 0 A_ChangeFlag("INVISIBLE",1)
//"####" A 0 ThrustThingZ(0,30,0,0)//A_ChangeFlag("NOGRAVITY",1)
//"####" A 0 A_PlaySoundEx("Misc/spin","Weapon")
"####" A 0 A_SpawnItemEx("AcrobaticsPreFX", 0, 0, 0, 0, 0, 0, 0,1)
"####" A 0 A_PlaySoundEx("Misc/release","Weapon")
"####" A 0 ThrustThingZ(0,45,0,1)
"####" A 0 //ThrustThing(angle * 256 / 360, 10, 0, 0)
//"####" A 3
Goto Fire.DashWarmup1

Fire.DashWarmup1:
"####" A 1 //A_ChangeVelocity(10,0, velz,CVF_RELATIVE|CVF_REPLACE)
"####" A 0 //A_PlaySoundEx("weapon/Heat2","Weapon")
"####" A 0 //A_JumpIf(Momz <= 0, "Fire.DashStart")
"####" A 0 A_Jumpifinventory("AcrobaticsWarmupTimer",1,"Fire.DashWarmup1")
"####" B 1 A_Jump(256,"Fire.DashStart")
Goto Fire.DashStart

Fire.DashStart:
"####" A 0 //A_GiveInventory("DashSet_B")
"####" A 0 //A_ChangeFlag("NOGRAVITY",0)
//"####" A 0 A_GiveInventory("AcrobaticsTimer")
"####" A 0 A_PlaySoundEx("Misc/Thok","Weapon")
"####" A 0 A_GiveInventory("AcrobaticsPPTimer")
"####" A 0 A_GiveInventory("AcrobaticsInitiate")
"####" A 0 A_SpawnItemEx("AcrobaticsRollingFX", 0, 0, 0, 0, 0, 0, 0,1)
"####" A 0 A_SpawnItemEx("Acrobatics_VWatcher")
"####" A 0 A_GiveInventory("PKMN_WhiteFlagDropper",1) //For objective combo
Fire.Dash:
"####" A 0 A_SetUserVar("user_wepangle",angle)
"####" A 0 A_SetUserVar("user_wepPitch",pitch)
TNT1 A 3
TNT1 A 0 //A_SetUserVar("user_wepangle", CallACS("SHIFT_MEMANGLE",CallACS("GRAB_MEMANGLE",0),angle,Acrobatics_TURNSPD))
TNT1 A 0 //A_SpawnItemEX("GroundDustFX",-25,0,-(z-floorz),0)
TNT1 A 0 A_Jumpifinventory("DashBreaker",1,"Fire.DashEnd")
//TNT1 A 0 A_Jumpifinventory("AcrobaticsTimer",1,"Fire.Dash")
TNT1 A 0 A_Jumpifinventory("AcrobaticsPPTimer",1,"Fire.Dash")
TNT1 A 0 A_Jumpifinventory("AcrobaticsBrakeCue",1,"Fire.Dash")
goto Fire.Dash1

Fire.Dash1:
TNT1 A 0 ACS_NamedExecuteAlways("TakePP",0,Move_Acrobatics,1)
TNT1 A 0 A_GiveInventory("AcrobaticsPPTimer")
TNT1 A 0 A_Jumpifinventory("DashBreaker",1,"Fire.DashEnd")
TNT1 A 1 A_JumpIFNoAmmo("Fire.DashEnd")
goto Fire.Dash

Fire.DashEnd:
"####" A 0 A_TakeInventory("AcrobaticsPPTimer",99)
"####" B 0 //A_ScaleVelocity(0.2)
"####" B 0 //A_GiveInventory("DashSetOff")
"####" A 0 A_SetTranslucent(1.0,0)
"####" A 0 A_ChangeFlag("INVISIBLE",0)
"####" A 0 A_GiveInventory("DashSetOff")
"####" B 1 A_GiveInventory("FullRecovery_B")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End

}
}

actor AcrobaticsMove1 : AcrobaticsMove {Weapon.SlotNumber 1}
actor AcrobaticsMove2 : AcrobaticsMove {Weapon.SlotNumber 2}
actor AcrobaticsMove3 : AcrobaticsMove {Weapon.SlotNumber 3}
actor AcrobaticsMove4 : AcrobaticsMove {Weapon.SlotNumber 4}

actor AcrobaticsMove5 : AcrobaticsMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("AcrobaticsMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}

//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor AcrobaticsPP : Ammo {inventory.amount 1 inventory.Maxamount 10}

actor AcrobaticsWarmupTimer : Powerup {inventory.amount 1 powerup.duration 10 }
actor AcrobaticsTimer : Powerup {inventory.amount 1 powerup.duration -10 }
actor AcrobaticsPPTimer : Powerup {inventory.amount 1 powerup.duration 70 }


actor AcrobaticsBrakeCue : Powerup {inventory.amount 1 powerup.duration 5 }
actor AcrobaticsBrakeCount : Inventory {inventory.amount 1 inventory.Maxamount 10 }
actor AcrobaticsJumpCue : Powerup {inventory.amount 1 powerup.duration 5 }

actor AcrobaticsBounceBuffer : Powerup {inventory.amount 1 powerup.duration 17 }



Actor AcrobaticsProtect : powerprotection
{
Powerup.duration 7
Damagefactor "Acrobatics", 0
}


//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]

actor AcrobaticsBall : BasicProjectile
{
Obituary "$OB_Acrobatics"
Damagetype "Acrobatics"
+BOUNCEONWALLS
+BOUNCEONFLOORS
+BOUNCEONCEILINGS
+ALLOWBOUNCEONACTORS
+BOUNCEONACTORS
+USEBOUNCESTATE
-NOGRAVITY
+MBFBOUNCER
+FORCEXYBILLBOARD
//+NOEXPLODEFLOOR
+STEPMISSILE
//+RIPPER
+SKYEXPLODE
+EXPLODEONWATER
+SERVERSIDEONLY
maxstepheight 35
BounceFactor 0.9
Gravity 1.55
damage (0)
Renderstyle "Translucent"
Alpha 0.7
Radius 26
Height 55
speed 10
Scale 2.5
Args 10
ReactionTime 2
States
{
Spawn:
TNT1 A 0
TNT1 A 1 ACS_namedExecuteAlways("ProjectilePort",0,150)
TNT1 A 0 A_SetArg(0,ACS_ExecuteWithResult(257,0))
ROLO R 0 A_Setarg(1,CallACS("GRAB_TIDMEMANGLE",0,0,Args[0]))
ROLO R 0 A_Setarg(2,CallACS("GRAB_TIDMEMANGLE",1,0,Args[0]))
ROLO R 1 
Spawn2:
ROLO R 0 A_ChangeVelocity(cos(Args[1])*Acrobatics_DashSPD,sin(Args[1])*Acrobatics_DashSPD,sin(-(Args[2]))*Acrobatics_DashSPD,CVF_REPLACE)
Spawn3:
ROLO RST 2 A_JumpIfInTargetInventory("ProjectilePortDead",1,"Death")
ROLO T 0 A_CountDown
loop
Bounce.Wall:
TNT1 A 0 A_ChangeFlag("BOUNCEONWALLS",0)
TNT1 A 0 A_ChangeFlag("BOUNCEONCEILINGS",0)
TNT1 A 0 A_ChangeFlag("BOUNCEONFLOORS",0)
TNT1 A 0 A_ChangeFlag("ALLOWBOUNCEONACTORS",0)
TNT1 A 0 A_ChangeFlag("BOUNCEONACTORS",0)
TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE",0)
TNT1 A 0 A_PlaySoundEx("Move/RolloutImpact","SoundSlot5")
ROLO R 0 A_SpawnItemEx("AcrobaticsDamager")
TNT1 A 1 a_GiveToTarget("AcrobaticsCollide1FX")
Goto Death

Bounce.Actor:
Bounce.Actor.Creature:
//TNT1 A 0 A_PlaySoundEx("Move/RolloutImpact","SoundSlot5")
//ROLO R 0 ThrustThingZ(0,45,0,0)
ROLO T 0 //A_ChangeVelocity(cos(Args[1])*-35,sin(Args[1])*-35,sin(-(Args[2]))*-35,CVF_REPLACE)
TNT1 A 0 A_ChangeFlag("BOUNCEONWALLS",0)
TNT1 A 0 A_ChangeFlag("BOUNCEONCEILINGS",0)
TNT1 A 0 A_ChangeFlag("BOUNCEONFLOORS",0)
TNT1 A 0 A_ChangeFlag("ALLOWBOUNCEONACTORS",0)
TNT1 A 0 A_ChangeFlag("BOUNCEONACTORS",0)
TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE",0)
//TNT1 A 1 A_Jumpifinventory("AcrobaticsBounceBuffer",1,"Spawn2")
ROLO R 0 A_SpawnItemEx("AcrobaticsDamager")
ROLO R 0 a_GiveToTarget("AcrobaticsCollide2FX")
//ROLO T 0 A_GiveInventory("AcrobaticsBounceBuffer")
Goto Death

Bounce.Floor:
Death:
AQBA C 0 
TNT1 A 1 A_GiveToTarget("DashBreaker")
stop
}
}

//#region 
/*
actor AcrobaticsBall : BasicProjectile
{
Obituary "$OB_Acrobatics"
Damagetype "Acrobatics"
+BOUNCEONWALLS
+BOUNCEONFLOORS
+BOUNCEONCEILINGS
+ALLOWBOUNCEONACTORS
+BOUNCEONACTORS
+USEBOUNCESTATE
-NOGRAVITY
+MBFBOUNCER
+FORCEXYBILLBOARD
//+NOEXPLODEFLOOR
+STEPMISSILE
//+RIPPER
+SKYEXPLODE
+EXPLODEONWATER
+SERVERSIDEONLY
maxstepheight 35
BounceFactor 0.9
Gravity 1.55
damage (0)
Renderstyle "Translucent"
Alpha 0.7
Radius 26
Height 55
speed 10
Scale 2.5
Args 10
ReactionTime 70
States
{
Spawn:
TNT1 A 0
TNT1 A 1 ACS_namedExecuteAlways("ProjectilePort",0,150)
TNT1 A 0 A_SetArg(1,ACS_ExecuteWithResult(257,0))
Spawn2:


ROLO R 0 A_GiveInventory("AcrobaticsSpeedHandler")
ROLO R 0 A_SetAngle(CallACS("GRAB_TIDMEMANGLE",0,0,Args[1]))
ROLO R 0 A_GiveInventory("AcrobaticsThrust")
ROLO R 0 //A_GiveToTarget("AcrobaticsBrakeSensor")
ROLO R 0 A_GiveToTarget("AcrobaticsJumpSensor")
TNT1 A 1 A_JumpIfInTargetInventory("ProjectilePortDead",1,"Death")

ROLO S 0 A_GiveInventory("AcrobaticsSpeedHandler")
ROLO S 0 A_SetAngle(CallACS("GRAB_TIDMEMANGLE",0,0,Args[1]))
ROLO S 0 A_GiveInventory("AcrobaticsThrust")
ROLO S 0 //A_GiveToTarget("AcrobaticsBrakeSensor")
ROLO S 0 A_GiveToTarget("AcrobaticsJumpSensor")
TNT1 A 1 A_JumpIfInTargetInventory("ProjectilePortDead",1,"Death")

ROLO T 0 A_GiveInventory("AcrobaticsSpeedHandler")
ROLO T 0 A_SetAngle(CallACS("GRAB_TIDMEMANGLE",0,0,Args[1]))
ROLO T 0 A_GiveInventory("AcrobaticsThrust")
ROLO T 0 //A_GiveToTarget("AcrobaticsBrakeSensor")
ROLO T 0 A_GiveToTarget("AcrobaticsJumpSensor")
TNT1 A 1 A_JumpIfInTargetInventory("ProjectilePortDead",1,"Death")

ROLO T 2 A_JumpifinTargetInventory("AcrobaticsPP",1,"Spawn2")
ROLO T 2 A_JumpifinTargetInventory("AcrobaticsPPTimer",1,"Spawn2")

stop
Bounce.Wall:
TNT1 A 0 A_ChangeFlag("BOUNCEONWALLS",0)
TNT1 A 0 A_ChangeFlag("BOUNCEONCEILINGS",0)
TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE",0)
TNT1 A 0 A_PlaySoundEx("Move/RolloutImpact","SoundSlot5")
ROLO R 0 A_SpawnItemEx("AcrobaticsDamager")
TNT1 A 1 a_GiveToTarget("AcrobaticsCollide1FX")
Goto Death

Bounce.Actor:
Bounce.Actor.Creature:
//TNT1 A 0 A_PlaySoundEx("Move/RolloutImpact","SoundSlot5")
ROLO R 0 ThrustThingZ(0,45,0,0)
TNT1 A 1 A_Jumpifinventory("AcrobaticsBounceBuffer",1,"Spawn2")
ROLO R 0 A_SpawnItemEx("AcrobaticsDamager")
ROLO R 0 a_GiveToTarget("AcrobaticsCollide2FX")
ROLO T 0 A_GiveInventory("AcrobaticsBounceBuffer")
Goto Spawn2

Bounce.Floor:
Death:
AQBA C 0 
TNT1 A 1 A_GiveToTarget("DashBreaker")
stop
}
}
*/
//#endregion

actor AcrobaticsWallBumper : BasicProjectile
{
speed 35
States
{
Spawn:
TNT1 A 0
TNT1 A 1
stop

Death:
TNT1 A 3 ThrustThing(angle-180,15,1,ACS_ExecuteWithResult(257,0))
stop
}
}

actor AcrobaticsDamager : BasicExplosion
{
Obituary "$OB_Acrobatics"
Damagetype "Acrobatics"
States
{
Spawn:
TNT1 A 0
TNT1 A 1 A_Explode(MBP_Acrobatics,75,0,0,75) 
stop
}
}


//[+]========================================================================[+]
//--------------------------------|Special Actors|------------------------------
//[+]========================================================================[+]

actor AcrobaticsThrust : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
//TNT1 A 0 A_ChangeVelocity(Args[0]*cos(CallACS("GRAB_TIDMEMANGLE",0,0,Args[1])),Args[0]*Sin(CallACS("GRAB_TIDMEMANGLE",0,0,Args[1])), velz,CVF_RELATIVE|CVF_REPLACE)
TNT1 A 0 A_ChangeVelocity(Args[0],0, velz,CVF_RELATIVE|CVF_REPLACE)
stop
}
}


actor AcrobaticsSpeedHandler : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
ROLO R 0 A_JumpifinTargetInventory("AcrobaticsBrakeCue",1,"SpinStop")
ROLO R 0 A_JumpifinTargetInventory("AcrobaticsJumpCue",1,"Hop")
ROLO R 0 A_JumpifinTargetInventory("AcrobaticsPP",1,"Pickup2")
Goto SpinStop

Pickup2:
ROLO R 0 A_TakeFromTarget("AcrobaticsBrakeCount",1)
//ROLO R 0 A_Jumpif(Args[0] <= 20,"SpeedUp")
stop

/*
SlowDown:
ROLO R 0 A_Jumpif(Args[0] < 2,"SlowDown2")
ROLO R 0 A_SetArg(0,Args[0]-1)
stop

SlowDown2:
ROLO R 0 A_GiveToTarget("AcrobaticsBrakeCount",1)
ROLO R 0 A_JumpifinTargetInventory("AcrobaticsBrakeCount",10,"SlowDown3")
stop

SlowDown3:
ROLO R 0 A_SetArg(0,Args[0]-1)
ROLO R 0 A_Jumpif(Args[0] <= 0,"SpinStop")
stop
*/
SpeedUp:
ROLO R 0 A_SetArg(0,Args[0]+1)
stop

Hop: //First,Process the arg
ROLO R 0 A_SetArg(2,(MomZ*(-4)))
ROLO R 0 A_Jumpif(Args[2] <= Acrobatics_JumpCap,"Hop2")
ROLO R 0 A_SetArg(2,Acrobatics_JumpCap)
Hop2:
ROLO R 0 A_Jumpifinventory("ThokSoundBuffer",1,"End")
//ROLO R 0  A_LogInt(MomZ)
//ROLO R 0  A_Log("----")
//ROLO R 0  A_LogInt(Args[2])
//ROLO R 0  A_Log("=====")
ROLO R 0 ThrustThingZ(0,Args[2],0,0)
ROLO R 0 A_GiveInventory("ThokSoundCue")
stop

SpinStop:
ROLO R 0 A_GiveToTarget("HaltPlayer")//A_SetArg(0,55)
ROLO R 0  //A_LogInt(args[0])
stop

End:
ROLO R 0  
stop

}
}

actor AcrobaticsBrakeSensor : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_ATTACK)==1,"Brakes")
stop

Brakes:
ROLO R 0 A_GiveInventory("AcrobaticsBrakeCue")
stop
}
}


actor AcrobaticsJumpSensor : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("PKMNACS_ButtonCheck",BT_JUMP)==1,"JumpCheck")
stop

JumpCheck:
ROLO R 0 A_JumpIf(MomZ < -8, "Jump")
stop

Jump:
ROLO R 0 A_GiveInventory("AcrobaticsJumpCue")
stop
}
}


actor AcrobaticsSpaceCheck : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_FireCustomMissile("AcrobaticsWallBumper",0,0,0,45,0,Pitch)
TNT1 A 0 A_FireCustomMissile("AcrobaticsWallBumper",90,0,0,45,0,Pitch)
TNT1 A 0 A_FireCustomMissile("AcrobaticsWallBumper",180,0,0,45,0,Pitch)
TNT1 A 0 A_FireCustomMissile("AcrobaticsWallBumper",270,0,0,45,0,Pitch)
stop
}
}

actor AcrobaticsInitiate : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_SpawnItemEX("AcrobaticsBall",0,0,0,MomX,MomY,MomZ,0,SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEMOMENTUM)
stop
}
}

actor AcrobaticsCollide1FX : CustomInventory
{
states
{
Pickup:
ROLO R 0 A_SpawnItemEx("BasicMeleeFX",25,0,0,0,0,0,0,1)
stop
}
}

actor AcrobaticsCollide2FX : CustomInventory
{
states
{
Pickup:
ROLO R 0 A_SpawnItemEx("SkyUppercutCeilingBonk",25,0,0,0,0,0,0,1)
stop
}
}

actor AcrobaticsPreFX : BasicClientside
{
scale 2.5
speed 7
States
{
Spawn:
TNT1 A 0
Spawn2:
ROLO R 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR F 0 A_Jumpifintargetinventory("AcrobaticsWarmupTimer",1,"Spawn2")
ROLO S 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR F 0 A_Jumpifintargetinventory("AcrobaticsWarmupTimer",1,"Spawn2")
ROLO T 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR F 0 A_Jumpifintargetinventory("AcrobaticsWarmupTimer",1,"Spawn2")
Goto Death
Death:
ROLO RST 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR F 0 
stop
}
}

actor AcrobaticsRollingFX : BasicClientside
{
Renderstyle "Translucent"
+FORCEXYBILLBOARD
Alpha 0.7
scale 2.5
speed 7
States
{
Spawn:
TNT1 A 0
Spawn2:
ROLO RST 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
"####" "####" 1 A_JumpIfInTargetInventory("AcrobaticsPPTimer",1,"Spawn2")
Goto Death
Death:
ROLO RST 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR F 0 
stop
}
}

Actor Acrobatics_VWatcher : VisibilityWatcher
{
ReactionTime 15
States
{
CheckInv:
TNT1 AAAA 1 A_JumpIfInTargetInventory("AcrobaticsPPTimer",1,"Reloop")
Goto Death
}
}