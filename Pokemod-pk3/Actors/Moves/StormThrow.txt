actor StormThrowMove : WepMasterBase
{
Tag "StormThrow"
obituary "$OB_STORMTHROW"
Weapon.AmmoUse 1
Weapon.AmmoGive 10
weapon.ammotype "StormThrowPP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
States
{
Spawn:
WEAP X 1
stop

Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_B)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 0 A_Jump(256,"Fire.GrabStart")
Goto Fire.GrabStart

Fire.GrabStart:
JARM F 0 A_TakeInventory("StormThrowPP",1)
//TNT1 A 1 A_GiveInventory("StormThrowGroundGuardFunc",1)
JARM F 0 A_GiveInventory("StormThrowGrabTimer",1)
FSTO D 0 A_TakeInventory("SuplexID",999)
//SAKH C 0 ThrustThingZ(0,45,0,1)
TNT1 A 0 A_PlaySound("weapon/BreakDash")
"####" A 0 A_GiveInventory("DashSet_B")
StormThrowWalk:
JARM F 0 A_GiveInventory("StormThrowWalkThrust",1)
//TNT1 A 1 A_GiveInventory("StormThrowGroundGuardFunc",1)
JARM F 1 A_GiveInventory("StormThrowGrabFunc",1)
JARM F 0 A_JumpIfInventory("SuplexID",1,"StormThrow")
JARM F 0 A_JumpIfInventory("StormThrowGrabTimer",1,"StormThrowWalk")
JARM F 0 A_Stop
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

StormThrow:
TNT1 A 0 A_PlaySound("weapon/crashland")
//TNT1 A 0 A_GiveInventory("DashSet_B")
TNT1 A 0 A_TakeInventory("Fly_Active",255)
TNT1 A 0 A_TakeInventory("ZangiefAngle",255)
TNT1 A 0 A_GiveInventory("ZangiefAngle",CallACS("GetAngleToTid",CallACS("Get_SuplexID_TID")))
TNT1 A 0 A_SetAngle(CallACS("GetAngleToTid",CallACS("Get_SuplexID_TID"))*360/256)
TOPH A 0 A_ChangeFlag("SHOOTABLE",0)
TNT1 A 0 A_ChangeFlag("SOLID",0)
TNT1 A 0 A_SetPitch(0)
//TNT1 A 1 ACS_NamedExecuteWithResult("SuplexGrasp_TID",0,angle,CallACS("Get_SuplexID_TID"))

TNT1 A 0 A_SetAngle(angle+20.0)
TNT1 AA 1 A_Jumpif(!CallACS("SuplexGrasp_TID",-20,angle,CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_SetAngle(angle+20.0)
TNT1 AA 1 A_Jumpif(!CallACS("SuplexGrasp_TID",-40,angle,CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_SetAngle(angle+20.0)
TNT1 AA 1 A_Jumpif(!CallACS("SuplexGrasp_TID",-60,angle,CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_SetAngle(angle+20.0)

TNT1 AA 1 A_Jumpif(!CallACS("SuplexGrasp_TID",-80,angle,CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_SetAngle(angle+20.0)
TNT1 AA 1 A_Jumpif(!CallACS("SuplexGrasp_TID",-90,angle,CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_SetAngle(angle+20.0)
TNT1 AA 1 A_Jumpif(!CallACS("SuplexGrasp_TID",-80,angle,CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_SetAngle(angle+20.0)

TNT1 AA 1 A_Jumpif(!CallACS("SuplexGrasp_TID",-60,angle,CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_SetAngle(angle+20.0)
TNT1 AA 1 A_Jumpif(!CallACS("SuplexGrasp_TID",-40,angle,CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_SetAngle(angle+20.0)
TNT1 AA 1 A_Jumpif(!CallACS("SuplexGrasp_TID",-20,angle,CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_SetAngle(angle+20.0)
TNT1 AA 1 A_Jumpif(!CallACS("SuplexGrasp_TID",0,angle,CallACS("Get_SuplexID_TID")),"StormThrowSlam")

//SAKH C 0 ThrustThingZ(0,120,0,0)
//TNT1 A 2
//TNT1 A 0 A_JumpIf(momz<0,"StormThrowSlamJump")
goto StormThrowSlamJump

GoingUpSpin:
SAKH C 0 ThrustThingZ(0,1,1,1)
TNT1 A 0 A_SetAngle(angle+20.0)
TNT1 A 1 A_Jumpif(!CallACS("Grasp_TID",CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_CheckFloor("StormThrowSlam")
TNT1 A 0 A_JumpIf(momz>0,"GoingUpSpin")
GoingDownSpin:
TNT1 A 0 ThrustThingZ(0,15,1,1)
TNT1 A 0 A_SetAngle(angle+20.0)
TNT1 A 1 A_Jumpif(!CallACS("Grasp_TID",CallACS("Get_SuplexID_TID")),"StormThrowSlam")
TNT1 A 0 A_CheckFloor("StormThrowSlam")
TNT1 A 0 A_JumpIf(momz<0,"GoingDownSpin")
goto StormThrowSlamJump

StormThrowSlamJump:
TNT1 A 0 
TNT1 A 1 A_Jump(256, "StormThrowSlam")
wait

StormThrowSlam:
TOPH A 0 A_ChangeFlag("SHOOTABLE",1)
TOPH A 0 A_ChangeFlag("INVULNERABLE",1)
TNT1 A 0 ACS_NamedExecuteWithResult("Give_AntiInvincible_ToTID",CallACS("Get_SuplexID_TID"))
TNT1 A 0 A_SpawnItemEX("StormThrow", 0,0,0, 0,0,0, 0, SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION, 0)
goto StormThrowSlamEnd

StormThrowSlamEnd:
TOPH A 0 A_ChangeFlag("INVULNERABLE",0)
TNT1 A 0 A_GiveInventory("DashSetOff")
TNT1 A 0 A_SpawnItemEx("ReSolidifier") // here it is
//TOPH A 0 A_ChangeFlag("SOLID",1) //More elegant solution later
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.After:
"####" B 1 A_GiveInventory("FullRecovery_B")
"####" A 0 A_GiveInventory("DashSetOff")
"####" C 0 A_REfire("Fire")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End
}
}

actor StormThrowMove1 : StormThrowMove {Weapon.SlotNumber 1}
actor StormThrowMove2 : StormThrowMove {Weapon.SlotNumber 2}
actor StormThrowMove3 : StormThrowMove {Weapon.SlotNumber 3}
actor StormThrowMove4 : StormThrowMove {Weapon.SlotNumber 4}

actor StormThrowMove5 : StormThrowMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("StormThrowMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}

//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor StormThrowPP : Ammo {inventory.amount 1 inventory.Maxamount 10}
actor StormThrowGrabTimer : Powerup {inventory.amount 1 powerup.duration 5}

Const int StormThrowRad = 120;
Const int StormThrow_Item = 14;

actor StormThrowWalkThrust : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("CutterFlag",999,"Nope")
TNT1 A 0 A_ChangeVelocity(cos(-pitch)*32,0,sin(-pitch)*32,CVF_RELATIVE|CVF_REPLACE)
stop
Nope:
TNT1 A 0
stop
}
}


actor StormThrowGrabFunc : CustomInventory
{
states
{
pickup:
TNT1 A 0 A_JumpIf(pitch<350 && pitch>=270, "UpLimit")
goto Pickup2
UpLimit:
TNT1 A 0 A_SetPitch(350)
Pickup2:
TNT1 A 0 A_FireCustomMissile("StormThrowGrab",0,0,0,0)
stop
}
}


actor StormThrowGroundGuardFunc : CustomInventory
{
states
{
pickup:
TNT1 A 0 ACS_NamedExecuteAlways("PKMNACS_RadiusGive",0,StormThrow_Item,StormThrowRad,RG_ENEMY)
stop
}
}

actor StormThrowGroundGuard : CustomInventory
{
states
{
pickup:
TNT1 A 0 A_CheckFloor("Ground")
stop
Ground:
TNT1 A 0 A_GiveInventory("StormThrowProtect")
stop
}
}

actor StormThrowProtect : PowerProtection 
{
    inventory.amount 1 
    powerup.duration 3
    DamageFactor "StormThrow1", 0.0

}

//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]

actor StormThrowGrab
{
PROJECTILE
Radius 20
Height 20
scale 2.5
Obituary "$OB_STORMTHROW"
speed 55
damage (MBP_StormThrow1)
reactiontime 1
damagetype "StormThrow1"
States
{
Spawn:
MMFX C 0
MMFX C 1 A_CountDown
goto Spawn+1
Death:
MMFX C 0 A_Explode(MBP_StormThrow1,40,0)
goto XDeath
XDeath:
MMFX C 0 A_Stop
MMFX CBCD 2
stop
}
}


actor StormThrow
{
PROJECTILE
scale 5.0
Obituary "$OB_STORMTHROW"
damagetype "StormThrow2"
Speed 0
+DONTBLAST
height 0
radius 0

+NOINTERACTION
+NOCLIP
+NOTARGETSWITCH
States
{
Spawn:
TNT1 A 0
TNT1 A 0 Thing_Move(0,CallACS("Get_Target_SuplexID_TID"),1)
TNT1 A 0 A_Explode(MBP_StormThrow2, 300, 0,0,300)
goto Spawn2
Spawn2:
TNT1 A 0 A_PlaySoundEx("weapon/crackerexplode", "Weapon")
TNT1 A 0 A_SpawnItemEx("HammerArmPoundFX",0,0,-(z-floorz),0,0,0,0,1)
TNT1 A 0 A_SpawnItemEx("StoneEdgeImpactFX",0,0,32,0,0,0,0,1)
TNT1 A 5
//NAPA EFGHIJKLMNOPQRS 1
stop
}
}

actor StormThrowSuplexStart : CustomInventory
{
states
{
pickup:
TNT1 A 0 A_SpawnItemEx("StormThrowSuplexHit")
stop
}
}

actor StormThrowHitBase
{
Height 0
Radius 0
+NOINTERACTION
-SOLID
+NOGRAVITY
+MISSILE
}

actor StormThrowSuplexHit : StormThrowHitBase
{
states
{
Spawn:
TNT1 A 0
TNT1 A 0 A_TransferPointer(AAPTR_TARGET,AAPTR_DEFAULT,AAPTR_TARGET,AAPTR_TRACER) //target's target to self's tracer
TNT1 A 0 A_RearrangePointers(AAPTR_TRACER,AAPTR_DEFAULT,AAPTR_TARGET) //target <-> tracer
TNT1 A 0 A_JumpIfInTargetInventory("SuplexID",1,"SpawnNo")
TNT1 A 0 A_GiveToTarget("SuplexID",CallACS("core_gettracer",0)-1000+1)
TNT1 A 1
stop
SpawnNo:
TNT1 A 1
stop
}
}

actor StormThrowPushStart : CustomInventory
{
states
{
pickup:
TNT1 A 0 A_SpawnItemEx("StormThrowPusher")
stop
}
}

actor StormThrowPusher : StormThrowHitBase
{
states
{
Spawn:
TNT1 A 0
TNT1 A 0 A_TransferPointer(AAPTR_TARGET,AAPTR_DEFAULT,AAPTR_TARGET,AAPTR_TRACER) //target's target to self's tracer
TNT1 A 0 A_FaceTracer
TNT1 A 0 //A_GiveToTarget("TempPitProtect",1)
TNT1 A 0 ThrustThing(angle*256/360,-20,0,ACS_ExecuteWithResult(257,0))
stop
}
}