actor AuraSphereMove : WepMasterBase
{
Tag "AuraSphere"
obituary "$OB_AURASPHERE"
Weapon.AmmoUse 1
Weapon.AmmoGive 20
weapon.ammotype "AuraSpherePP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
States
{
Spawn:
WEAP X 1
stop


Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_A)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 0 A_Jump(256,"Fire.Bullet")
Goto Fire.Bullet

Fire.Bullet:
"####" B 0 A_PlaySoundEx("weapon/cfire2","Weapon")
"####" B 0 A_FireCustomMissile("AuraSphereShot",0,1,0,0)
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.After:
"####" B 1 A_GiveInventory("SemiRecovery_A")
"####" B 0 A_TakeInventory("WeaponCharge",999)
"####" B 0 A_TakeInventory("ChannelingSpeed",9) 
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End

}
}

actor AuraSphereMove1 : AuraSphereMove {Weapon.SlotNumber 1}
actor AuraSphereMove2 : AuraSphereMove {Weapon.SlotNumber 2}
actor AuraSphereMove3 : AuraSphereMove {Weapon.SlotNumber 3}
actor AuraSphereMove4 : AuraSphereMove {Weapon.SlotNumber 4}

actor AuraSphereMove5 : AuraSphereMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("AuraSphereMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}

//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor AuraSpherePP : Ammo {inventory.amount 1 inventory.Maxamount 20}

Const int ARSP_Seek = 5;
Const int ARSP_ZSeek = 10;
Const int ARSP_SeekRange = 9;
//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]

actor AuraSphereShot : PKMN_SkillShot
{
+SEEKERMISSILE
+SCREENSEEKER
Damage (MBP_AuraSphere)
DamageType "AuraSphere"
obituary "$OB_AuraSphere"
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_TransferPointer(AAPTR_TARGET,AAPTR_DEFAULT,AAPTR_TRACER,AAPTR_TRACER)
MBU2 A 1 A_JumpIf(IsPointerEqual(AAPTR_TRACER, AAPTR_NULL) == FALSE, "Spawn.Seek")
Spawn.Search:
TNT1 A 0 A_SetArg(0,Momz)
MBU2 A 0 A_SeekerMissile (0, 0, SMF_LOOK , 256, ARSP_SeekRange)
MBU2 A 1 A_GiveInventory("AuraSphereSeekFunction",1)
MBU2 A 1 A_SpawnItemEx("AuraSphereTrail",0,0,0,0,0,0,0,1)
MBU2 A 0 A_JumpIf(IsPointerEqual(AAPTR_TRACER, AAPTR_NULL) == FALSE, "Spawn.Seek")
MBU2 B 0 A_SeekerMissile (0, 0, SMF_LOOK , 256, ARSP_SeekRange)
MBU2 B 1 A_GiveInventory("AuraSphereSeekFunction",1)
MBU2 B 1 A_SpawnItemEx("AuraSphereTrail",0,0,0,0,0,0,0,1)
MBU2 B 0 A_JumpIf(IsPointerEqual(AAPTR_TRACER, AAPTR_NULL) == FALSE, "Spawn.Seek")
MBU2 C 0 A_SeekerMissile (0, 0, SMF_LOOK , 256, ARSP_SeekRange)
MBU2 C 1 A_GiveInventory("AuraSphereSeekFunction",1)
MBU2 C 1 A_SpawnItemEx("AuraSphereTrail",0,0,0,0,0,0,0,1)
MBU2 C 0 A_JumpIf(IsPointerEqual(AAPTR_TRACER, AAPTR_NULL) == FALSE, "Spawn.Seek")
MBU2 E 0 A_SeekerMissile (0, 0, SMF_LOOK , 256, ARSP_SeekRange)
MBU2 E 1 A_GiveInventory("AuraSphereSeekFunction",1)
MBU2 E 1 A_SpawnItemEx("AuraSphereTrail",0,0,0,0,0,0,0,1)
MBU2 E 0 A_JumpIf(IsPointerEqual(AAPTR_TRACER, AAPTR_NULL) == FALSE, "Spawn.Seek")
TBLA A 0 A_Countdown
loop

Spawn.Seek:
TNT1 A 0 
TNT1 A 0 A_SetArg(0,Momz)
MBU2 A 0 A_SeekerMissile (ARSP_Seek, ARSP_Seek, SMF_PRECISE)
MBU2 A 1 A_GiveInventory("AuraSphereSeekFunction",1)

MBU2 A 1 A_SpawnItemEx("AuraSphereTrail",0,0,0,0,0,0,0,1)
MBU2 BB 1 A_SpawnItemEx("AuraSphereTrail",0,0,0,0,0,0,0,1)

TNT1 A 0 A_SetArg(0,Momz)
MBU2 C 0 A_SeekerMissile (ARSP_Seek, ARSP_Seek, SMF_PRECISE)
MBU2 C 1 A_GiveInventory("AuraSphereSeekFunction",1)

MBU2 C 1 A_SpawnItemEx("AuraSphereTrail",0,0,0,0,0,0,0,1)
MBU2 EE 1 A_SpawnItemEx("AuraSphereTrail",0,0,0,0,0,0,0,1)
TBLA A 0 
TBLA A 0 A_Countdown
loop

Death:
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 0 A_SpawnItemEx("AuraSphereImpact",0,0,0,0,0,0,0,1)
BSTG AAAAAA 0 A_SpawnItemEx("AuraSphereParticle", 0, 0, 28, 256/24, 256/24, random2(256/24), random(0, 359),1)
TNT1 A 8
stop
}
}



//[+]========================================================================[+]
//--------------------------------|Special Actors|------------------------------
//[+]========================================================================[+]
actor AuraSphereSeekFunction : CustomInventory
{
    States
    {
        Pickup:
        TNT1 A 1
        TNT1 A 1 A_SpawnItemEx("AuraSphereTrail",0,0,0,0,0,0,0,1)
        TNT1 A 0 A_JumpIf(Momz-args[0] < -ARSP_ZSeek,"DownClamp")
        TNT1 A 0 A_JumpIf(Momz-args[0] > ARSP_ZSeek,"UpClamp")
        stop
        DownClamp:
        TNT1 A 0 A_SetArg(0,args[0]-ARSP_ZSeek)
        TNT1 A 0 A_ChangeVelocity(momx, momy,args[0],CVF_REPLACE)
        stop
        UpClamp:
        TNT1 A 0 A_SetArg(0,args[0]+ARSP_ZSeek)
        TNT1 A 0 A_ChangeVelocity(momx, momy,args[0],CVF_REPLACE)
        stop
    }
}

actor AuraSphereTrail : BasicClientside
{
scale 2.5
//renderstyle "add"
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
MBU2 DDEE 1 A_Fadeout
stop
}
}

actor AuraSphereParticle : BasicClientside
{
scale 1.2
renderstyle "add"
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A random(0,3)
HARD CCDDEE 2 A_ScaleVelocity(0.8)
stop
}
}

actor AuraSphereImpact : BasicClientside
{
scale 1.2
renderstyle "Normal"
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
PHAS LMNO 2 
stop
}
}
