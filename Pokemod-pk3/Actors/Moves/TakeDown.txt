actor TakeDownMove : WepMasterBase
{
Tag "TakeDown"
obituary "$OB_TAKEDOWN"
Weapon.AmmoUse 1
Weapon.AmmoGive 25
weapon.ammotype "TakeDownPP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
States
{
Spawn:
WEAP X 1
stop


Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_B)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 0 A_Jump(256,"Fire.DashWarmup")
Goto Fire.DashWarmup

Fire.DashWarmup:
"####" A 0 ACS_NamedExecuteAlways("TakePP",0,Move_TakeDown,1)
"####" A 0 A_GiveInventory("TakeDownWarmupTimer")
"####" A 0 A_GiveInventory("DashSet_A")
"####" A 0 A_Stop
Fire.DashWarmup1:
"####" A 3
"####" AAA 0 A_SpawnItemEx("GroundDustFX", random(0,50), 0, -(z-floorz), 0, 0, 0, random(0, 359))
"####" A 0 A_PlaySoundEx("weapon/Trample","Weapon")
"####" A 0 A_Jumpifinventory("TakeDownWarmupTimer",1,"Fire.DashWarmup1")
"####" B 0 A_Jump(256,"Fire.DashStart")
Goto Fire.DashWarmup

Fire.DashStart:
"####" A 0 A_GiveInventory("DashSet_B")
"####" A 0 A_GiveInventory("TakeDownTimer")
"####" A 0 A_GiveInventory("TakeDownInitiate")
Fire.Dash:
"####" A 1
"####" A 0 A_SpawnItemEX("GroundDustFX",-25,0,-(z-floorz),0)
"####" A 0 A_Jumpifinventory("DashBreaker",1,"Fire.DashEnd")
"####" A 0 A_Jumpifinventory("TakeDownTimer",1,"Fire.Dash")
goto Fire.DashEnd

Fire.DashEnd:
"####" B 0 A_ScaleVelocity(0.2)
"####" B 0 A_GiveInventory("DashSetOff")
"####" A 0 A_GiveInventory("DashSetOff")
"####" B 1 A_GiveInventory("HalfRecovery_B")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End




}
}

actor TakeDownMove1 : TakeDownMove {Weapon.SlotNumber 1}
actor TakeDownMove2 : TakeDownMove {Weapon.SlotNumber 2}
actor TakeDownMove3 : TakeDownMove {Weapon.SlotNumber 3}
actor TakeDownMove4 : TakeDownMove {Weapon.SlotNumber 4}

actor TakeDownMove5 : TakeDownMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("TakeDownMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}

//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor TakeDownPP : Ammo {inventory.amount 1 inventory.Maxamount 25}

actor TakeDownTimer : Powerup {inventory.amount 1 powerup.duration 17 }
actor TakeDownWarmupTimer : Powerup {inventory.amount 1 powerup.duration 5 }

Actor TakeDownDelay : powerprotection
{
Powerup.duration 5
Damagefactor "TakeDown", 0
}

const int TKDW_Thrust = 35;
//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]
actor TakeDownBumper : BasicProjectile
{
Speed 35 
Damage (0)
radius 6
height 6
DamageType "TakeDown"
Obituary "$OB_TAKEDOWN"
scale 1.5
//+NOINTERACTION
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_JumpIfInTargetInventory("DashBreaker",1,"Terminate")
TNT1 A 1 
TNT1 A 1 A_Explode(MBP_TakeDown,RAMHITBOX,0,0,RAMHITBOX)
stop
Death:
TNT1 A 0 A_Explode(MBP_TakeDown,RAMHITBOX,0,0,RAMHITBOX)
TNT1 A 1 A_GiveInventory("ProjectileDCode",1)
TNT1 A 0 A_GiveToTarget("TakeDownCollision2",1)
TNT1 A 0 A_SpawnItemEx("BasicMeleeFX", 0, 0, 0, 0, 0, 0, 0,1)
Crash:
TNT1 A 0 A_Explode(MBP_TakeDown,RAMHITBOX,0,0,RAMHITBOX)
Terminate:
TNT1 A 1
stop
}
}
//[+]========================================================================[+]
//--------------------------------|Special Actors|------------------------------
//[+]========================================================================[+]

actor TakeDownWave
{
PROJECTILE
+FLOORCLIP
+THRUGHOST
+MTHRUSPECIES
+NOEXPLODEFLOOR
Radius 5
Height 5
scale 2.0
damage (0)
reactiontime 3
DamageType "TakeDown"
obituary "$OB_TakeDown"
speed 0
States
{
Spawn:
BEWA B 0

BEWA B 1 A_Fadeout
BEWA B 0 A_SetScale(ScaleX+0.3)
BEWA B 0 A_CountDown
loop
Death:
BEWA A 0
stop
}
}


actor TakeDownCollision : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("DashBreaker",1,"Nope")
TNT1 A 1 A_GiveInventory("DashBreaker",1)
TNT1 A 0 A_Stop
TNT1 A 0 A_ChangeVelocity(cos(-pitch)*-35,0,sin(pitch)*35,CVF_RELATIVE)
TNT1 A 0 ThrustThingZ(0,30,1,1)
stop
Nope:
TNT1 A 0
stop
}
}

actor TakeDownCollision2 : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("DashBreaker",1,"Nope")
TNT1 A 0 A_PlaySoundEx("weapon/Rebound","SoundSlot5")
TNT1 A 0 ACS_NamedExecuteAlways("PKMN_CollisionDamager",0,MBP_TakeDown)
//TNT1 A 0 DamageThing(MBP_TakeDown*(CallACS("StatValueRamp",STAT_PATK,1,400)*0.01))
TNT1 A 1 A_GiveInventory("DashBreaker",1)
TNT1 A 0 A_Stop
stop
Nope:
TNT1 A 0
stop
}
}

actor TakeDownThrust : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("CutterFlag",999,"Nope")
TNT1 A 0 A_JumpIfInventory("DashBreaker",1,"Nope")
TNT1 A 0 A_PlaySoundEx("weapon/Trample","SoundSlot5")
TNT1 A 0 A_ChangeVelocity(TKDW_Thrust,0,Momz,CVF_RELATIVE|CVF_REPLACE)//cos(-pitch)* , sin(-pitch)*TKDW_Thrust
TNT1 A 1 A_FireCustomMissile("TakeDownBumper",0,0,0,15,0,Pitch)
BASB A 1 A_SpawnitemEx("TakeDownWave",cos(-pitch)*30,0,(25),0,0,0,0,SXF_TRANSFERTRANSLATION) //+(sin(pitch)*30)
stop
Nope:
TNT1 A 0
stop
}
}

actor TakeDownInitiate : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_Spawnitemex("TakeDownWatcher")
stop
}
}

actor TakeDownWatcher : BasicHelper 
{
Var int user_DashTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("DashBreaker",1,"Death")
TNT1 A 0 A_SetUserVar("user_DashTime",user_DashTime+1)
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 3 A_GiveToTarget("TakeDownThrust")
TNT1 A 0 A_JumpIfInTargetInventory("TakeDownTimer",1,"Spawn")
//TNT1 A 0 A_Jumpif(user_DashTime <= 6,"Spawn")
Goto Death
Check2:
TNT1 A 0 A_JumpIfInTargetInventory("DashBreaker",1,"Spawn")
Goto Death
Death:
DeathTake:
TNT1 A 0 //A_TakeFromTarget("TakeDownActive",1)
stop
}
}
