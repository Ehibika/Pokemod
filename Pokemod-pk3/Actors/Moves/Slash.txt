actor SlashMove : WepMasterBase
{
Tag "Slash"
obituary "$OB_Slash"
Weapon.AmmoUse 1
Weapon.AmmoGive 25
weapon.ammotype "SlashPP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
States
{
Spawn:
WEAP X 1
stop


Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_B)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" A 0 ACS_NamedExecuteAlways("TakePP",0,Move_Slash,1)
"####" B 0 A_CheckFloor("Fire.PitchCheck")
"####" B 0 A_Jump(256,"Fire.Blade")
Goto Fire.Blade

Fire.PitchCheck:
"####" B 0 A_Jumpif(Pitch < 55,"Fire.Blade2")
"####" B 0 A_Jump(256,"Fire.Blade")
Goto Fire.Blade

Fire.Blade:
TNT1 A 0 A_SpawnItemEx("SlashWatcher", cos(-pitch)*16, 0, 32+(sin(-pitch)*16), 0, 0, 0, 0, SXF_TRANSFERPITCH)
TNT1 A 1 A_SpawnItemEx("SlashSlashFX1", 0, 0, 0, cos(pitch), 0, sin(-pitch), 0, SXF_MULTIPLYSPEED|SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.Blade2: //Locked to lateral position
TNT1 A 0 A_SpawnItemEx("SlashWatcher")
TNT1 A 1 A_SpawnItemEx("SlashSlashFX1", 0, 0, 0, cos(pitch), 0, sin(-pitch), 0, SXF_MULTIPLYSPEED|SXF_TRANSFERTRANSLATION)
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.After:
"####" B 1 A_GiveInventory("PartRecovery_B")
"####" A 0 A_GiveInventory("MoveCooldown_1Half")
"####" C 0 A_REfire("Fire")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End





}
}

actor SlashMove1 : SlashMove {Weapon.SlotNumber 1}
actor SlashMove2 : SlashMove {Weapon.SlotNumber 2}
actor SlashMove3 : SlashMove {Weapon.SlotNumber 3}
actor SlashMove4 : SlashMove {Weapon.SlotNumber 4}

actor SlashMove5 : SlashMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("SlashMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}

//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor SlashPP : Ammo {inventory.amount 1 inventory.Maxamount 25}

actor Slash1Protect : PowerProtection
{
Powerup.Duration 10
damagefactor "Normal", 1.0
damagefactor "Slash1", 0.0
}

actor Slash2Protect : PowerProtection
{
Powerup.Duration 10
damagefactor "Normal", 1.0
damagefactor "Slash2", 0.0
}

//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]

actor SlashWatcher
{
    PROJECTILE
    +NOINTERACTION
    renderstyle none
    speed 32
    height 1
    radius 1
    States
    {
    Spawn:
		TNT1 A 0
	Spawn1:
        TNT1 A 0 A_SpawnItemEx("SlashStart", 0, 0, 0, cos(pitch), 0, sin(-pitch), 50, SXF_MULTIPLYSPEED)
		TNT1 A 1 A_Warp(AAPTR_TARGET, cos(-pitch)*16,0,32+(sin(-pitch)*16), 0, WARPF_USECALLERANGLE)
		TNT1 A 0 A_SetArg(0,args[0]+1)
		TNT1 A 0 A_JumpIf(args[0] < 5,"Spawn1")
		TNT1 A 0 A_SetArg(0,0)
		TNT1 A 0 A_PlaySoundEx("weapon/SlashClaw","Weapon")
	Spawn2:
	TNT1 A 0 A_SpawnItemEx("SlashStart", 0, 0, 0, cos(pitch), 0, sin(-pitch), 50-(10*args[1]), SXF_MULTIPLYSPEED)
	TNT1 A 0 A_SpawnItemEx("SlashStart", 0, 0, 0, cos(pitch), 0, sin(-pitch), 40-(10*args[1]), SXF_MULTIPLYSPEED)
	TNT1 A 1 A_Warp(AAPTR_TARGET, cos(-pitch)*16,0,32+(sin(-pitch)*16), 0, WARPF_USECALLERANGLE)
		TNT1 A 0 A_SetArg(1,args[1]+2)		
		TNT1 A 0 A_JumpIf(args[1] < 10,"Spawn2")
        stop
    WindDown1:
        TNT1 A 0
        stop
    }
}


actor SlashStart 
{
PROJECTILE
+RIPPER
damagetype "Slash1"
damage (MBP_Slash1)
height 5
radius 5
Speed 25
scale 2.5
states
{
Spawn:
TNT1 A 0
TNT1 A 0 A_Jumpif(pitch > 6,"SpawnTip")
TNT1 A 0 A_setPitch(Pitch+1)
TNT1 A 0 A_SpawnItemEx("SlashStart",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPITCH)
TNT1 A 1 A_SpawnItemEx("SlashEdgeFX2",0,0,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM)
Goto Death

SpawnTip:
TNT1 A 0 A_setPitch(Pitch+1)
TNT1 A 0 A_SpawnItemEx("SlashTip",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPITCH)
TNT1 A 1 A_SpawnItemEx("SlashTipFX2",0,0,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM)
Goto Death

Death:
TNT1 A 0 A_SpawnItemEx("OilPitIgnite",0,0,8)
stop
}
}

actor SlashTip
{
PROJECTILE
+RIPPER
damagetype "Slash2"
damage (MBP_Slash2)
height 5
radius 5
Speed 26
scale 2.5
states
{
Spawn:
TNT1 A 0
TNT1 A 0 A_Jumpif(pitch > 8,"Death")
TNT1 A 0 A_setPitch(Pitch+1)
TNT1 A 0 A_SpawnItemEx("SlashTip",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPITCH)
TNT1 A 1 A_SpawnItemEx("SlashTipFX2",0,0,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM)
Goto Death
Death:
TNT1 A 0 A_SpawnItemEx("OilPitIgnite",0,0,8)
stop
}
}

actor SlashEdgeFX : BasicNOTClientside
{
scale 2.5
XScale 4.0
Alpha 1.0
ReactionTime 8
renderstyle "Add"
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
BASB U 1
Spawn2:
BASB U 1 A_Fadeout
TNT1 A 0 A_CountDown
loop

Death:
TNT1 A 0
stop
}
}

actor SlashTipFX : SlashEdgeFX
{
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCodeSyncTarget",1)
BASB W 1
Spawn2:
BASB W 1 A_Fadeout
TNT1 A 0 A_CountDown
loop

Death:
TNT1 A 0
stop
}
}


actor SlashEdgeFX2 : SlashEdgeFX {ReactionTime 1}
actor SlashTipFX2 : SlashTipFX {ReactionTime 1}


actor SlashSlashFX1 : BasicHelper
{
+MISSILE
+CLIENTSIDEONLY
	reactiontime 20
	var int user_angle;
	States
	{
		Spawn:
		TNT1 A 0
        TNT1 A 0 A_GiveInventory("ProjectileCodeSyncTarget",1)
        //TNT1 A 0 A_SetPitch(CallACS("PitchGrab"))
		TNT1 A 0 A_SetUserVar("user_angle", 50)
		TNT1 A 3
        TNT1 A 1 A_Warp(AAPTR_TARGET, cos(-pitch)*16,0,32+(sin(-pitch)*16), 0, WARPF_USECALLERANGLE )
		SpawnLoop:
		TNT1 A 0 A_SpawnItemEx("SlashEdgeFX", cos(pitch)*150, 0, 12-(sin(pitch)*150), 0, 0, 0, 0+user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("SlashEdgeFX", cos(pitch)*125, 0, 12-(sin(pitch)*125), 0, 0, 0, 0+user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
        TNT1 A 0 A_SpawnItemEx("SlashTipFX", cos(pitch)*200, 0, 12-(sin(pitch)*200), 0, 0, 0, user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SetUserVar("user_angle", user_angle - 5)
        TNT1 A 0 A_Countdown
        
		TNT1 A 0 A_SpawnItemEx("SlashEdgeFX", cos(pitch)*150, 0, 12-(sin(pitch)*150), 0, 0, 0, 0+user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("SlashEdgeFX", cos(pitch)*125, 0, 12-(sin(pitch)*125), 0, 0, 0, 0+user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
        TNT1 A 0 A_SpawnItemEx("SlashTipFX", cos(pitch)*200, 0, 12-(sin(pitch)*200), 0, 0, 0, user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SetUserVar("user_angle", user_angle - 5)
        TNT1 A 0 A_Countdown
        
		TNT1 A 0 A_SpawnItemEx("SlashEdgeFX", cos(pitch)*150, 0, 12-(sin(pitch)*150), 0, 0, 0, 0+user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("SlashEdgeFX", cos(pitch)*125, 0, 12-(sin(pitch)*125), 0, 0, 0, 0+user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
        TNT1 A 0 A_SpawnItemEx("SlashTipFX", cos(pitch)*200, 0, 12-(sin(pitch)*200), 0, 0, 0, user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SetUserVar("user_angle", user_angle - 5)
        TNT1 A 0 A_Countdown

		TNT1 A 0 A_SpawnItemEx("SlashEdgeFX", cos(pitch)*150, 0, 12-(sin(pitch)*150), 0, 0, 0, 0+user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("SlashEdgeFX", cos(pitch)*125, 0, 12-(sin(pitch)*125), 0, 0, 0, 0+user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
        TNT1 A 0 A_SpawnItemEx("SlashTipFX", cos(pitch)*200, 0, 12-(sin(pitch)*200), 0, 0, 0, user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SetUserVar("user_angle", user_angle - 5)
        TNT1 A 0 A_Countdown

		TNT1 A 0 A_SpawnItemEx("SlashEdgeFX", cos(pitch)*150, 0, 12-(sin(pitch)*150), 0, 0, 0, 0+user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SpawnItemEx("SlashEdgeFX", cos(pitch)*125, 0, 12-(sin(pitch)*125), 0, 0, 0, 0+user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
        TNT1 A 0 A_SpawnItemEx("SlashTipFX", cos(pitch)*200, 0, 12-(sin(pitch)*200), 0, 0, 0, user_angle, SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH)
		TNT1 A 0 A_SetUserVar("user_angle", user_angle - 5)
		TNT1 A 0 A_Countdown
		TNT1 A 1 A_Warp(AAPTR_TARGET, cos(-pitch)*16,0,32+(sin(-pitch)*16), 0, WARPF_USECALLERANGLE )
		loop
		Death:
		TNT1 A 0
		stop
	}
}
