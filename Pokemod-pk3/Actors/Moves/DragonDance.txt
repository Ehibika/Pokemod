actor DragonDanceMove : WepMasterBase
{
Tag "DragonDance"
obituary "$OB_DRAGONDANCE"
Weapon.AmmoUse 1
Weapon.AmmoGive 5
weapon.ammotype "DragonDancePP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
States
{
Spawn:
WEAP X 1
stop


Fire:
"####" B 0 A_Jumpif(CallACS("CheckWeaponFire",RC_C)==0,"NoAmmo")
"####" B 0 A_JumpIfInventory("STF_DragonDance",1,"NoAmmo")
"####" B 0 A_Jump(256,"Fire.Channel")
Goto Fire.Channel

Fire.Channel:
"####" B 0 A_GiveInventory("WeaponCharge",1)
"####" B 0 A_GiveInventory("ChannelingSpeed")
"####" B 0 A_GiveInventory("DragonDanceParticleSpawn")
"####" B 0 A_JumpIfInventory("WeaponCharge",35,"Fire.Initiate")
"####" B 0 A_PlaySoundEx("Weapon/Heat1","Soundslot6")
"####" B 1
"####" C 0 A_REfire("Fire.Channel")
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.Initiate:
"####" B 0 A_PlaySoundEx("Support/Statup","Soundslot7")
"####" B 0 A_GiveInventory("DragonDanceBuffInitiate")
"####" B 0 A_TakeInventory("DragonDancePP",1)

//"####" B 0 A_FireCustomMissile("DragonDanceProjectile",0,1,4,4)
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.After:
"####" B 1 A_GiveInventory("Recovery_C",20)
"####" B 0 A_TakeInventory("ChannelingSpeed",9)
"####" C 0 A_REfire("Fire")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End

}
}

actor DragonDanceMove1 : DragonDanceMove {Weapon.SlotNumber 1}
actor DragonDanceMove2 : DragonDanceMove {Weapon.SlotNumber 2}
actor DragonDanceMove3 : DragonDanceMove {Weapon.SlotNumber 3}
actor DragonDanceMove4 : DragonDanceMove {Weapon.SlotNumber 4}

actor DragonDanceMove5 : DragonDanceMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("DragonDanceMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}
//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor DragonDancePP : Ammo {inventory.amount 1 inventory.Maxamount 5}

actor STF_DragonDance : Powerup {inventory.amount 1 Powerup.Duration -15}

actor DragonDanceBuffInitiate : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("STF_DragonDance",1,"Sustain")
TNT1 A 0 A_GiveInventory("STF_DragonDance",1)
TNT1 A 0 A_SpawnitemEX("DragonDanceBuffWatcher")
TNT1 A 0 A_GiveInventory("StatUpdator",1)
stop

Sustain:
TNT1 A 0 A_GiveInventory("STF_DragonDance",1)
stop
Nope:
TNT1 A 0
stop
}
}


actor DragonDanceBuffWatcher : BasicHelper 
{
Var int user_DashTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 5 A_GiveToTarget("PatkUpFXSpawn")
TNT1 A 0 A_GiveToTarget("SpdUpFXSpawn")
TNT1 A 0 A_JumpIfInTargetInventory("STF_DragonDance",1,"Spawn")
TNT1 A 1 A_GiveToTarget("StatUpdator")
TNT1 A 5
Goto Death

Death:
TNT1 A 0 
stop
}
}


actor DragonDanceParticle : BasicClientside
{
scale 1.2
Reactiontime 35
speed 7
var int user_speed;
var int user_maxturn;
var int user_turndivisor;
var int user_turndivisor_add;
States
{
    Spawn:
    POWS A 0
    TNT1 A 0 A_SetUserVar("user_speed", 30)
    TNT1 A 0 A_SetUserVar("user_maxturn", 30)
    TNT1 A 0 A_SetUserVar("user_turndivisor", 50)
    TNT1 A 0 A_SetUserVar("user_turndivisor_add", 12)
    Spawn2:
    TNT1 A 0 A_Setangle(angle-user_maxturn)
    HARD B 1 A_ChangeVelocity(user_speed,0,5,CVF_RELATIVE|CVF_REPLACE)
    TNT1 A 0 A_CountDown
    loop
}
}

actor DragonDanceParticleSpawn : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_SpawnItemEx ("DragonDanceParticle", 0, -60, 0, 0, 0, 5, random(0,360),SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
stop
Nope:
TNT1 A 0
stop
}
}