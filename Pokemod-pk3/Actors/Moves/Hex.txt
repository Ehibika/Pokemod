actor HexMove : WepMasterBase
{
Tag "Hex"
Weapon.AmmoUse 1
Weapon.AmmoGive 20
weapon.ammotype "HexPP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
States
{
Spawn:
WEAP X 1
stop


Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_A)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 1
"####" B 0 A_Jump(256,"Fire.Bullet")
Goto Fire.Bullet


Fire.Aim:
"####" B 1 A_FireCustomMissile("HexRingSpawner",0,0,0,Aim_OverHead)
//"####" B 0 A_FireCustomMissile("HexGraphicSpawner",0,0,0,Aim_OverHead)
"####" C 0 A_JumpIfInventory("IsBot",1,"Fire.Bullet")
"####" C 0 A_REfire("Fire.Aim")
"####" B 0 A_Jump(256,"Fire.Bullet")
Goto Fire.Bullet

Fire.Bullet:
"####" B 0 A_PlaySoundEx("Weapon/HardBuster5","Weapon")
"####" B 0 A_FireCustomMissile("HexDamager",0,1,0,0,0,0)
"####" B 3 A_FireCustomMissile("HexStart",0,0,0,0,0,0)
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.After:
"####" B 1 A_GiveInventory("SemiRecovery_A")
"####" C 0 A_REfire("Fire")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End





}
}

actor HexMove1 : HexMove {Weapon.SlotNumber 1}
actor HexMove2 : HexMove {Weapon.SlotNumber 2}
actor HexMove3 : HexMove {Weapon.SlotNumber 3}
actor HexMove4 : HexMove {Weapon.SlotNumber 4}

actor HexMove5 : HexMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("HexMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}

//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor HexPP : Ammo {inventory.amount 1 inventory.Maxamount 20}


Const int HexRad = 100;

Actor HexCritical : powerprotection
{
Powerup.duration 11
Damagefactor "Hex", 2.0
}

actor HexCheck : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Crit") //This effectively checks for a major status
stop

Crit:
TNT1 A 0 A_GiveInventory("HexCritical")
TNT1 A 0 A_SpawnItemEX("PowerStrikeFX2",0,0,28)
stop

Nope:
TNT1 A 0
stop
}
}
//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]

Const Int HexRange = 80;
actor HexDamager : BasicFastProjectile
{
    PROJECTILE
    damagetype "Hex"
    Obituary "$OB_Hex"
    +SKYEXPLODE
    +EXPLODEONWATER
	+HITTRACER
    RenderStyle None
    Damage (0) 
    Radius 10
    Height 10
    speed 1200 //15 * HexRange(80)
    scale 2.5
    states
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1 A_Stop
        TNT1 A 0
        stop
		Death:
		TNT1 A 1 A_GiveInventory("HexCheck",1,AAPTR_TRACER)
		TNT1 A 0 A_Explode(MBP_Hex,32,0,0,32)
		Stop
    }
}


actor HexStart //: BasicHelper
{
    +MISSILE
    -SOLID
    +NOCLIP
    +NOINTERACTION
    +NOGRAVITY
    +DONTBLAST
    +DONTREFLECT
    +THRUACTORS
    RenderStyle none
    Radius 2
    Height 2

    Speed 15
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_Warp(2,15,0,32,0,16+8)//But which interpolation? Does it matter?
        TNT1 A 1 A_SpawnItemEx("HexBeam",0,0,0,momx,momy,momz,0,8)
		TNT1 A 0 A_SpawnItemEx("HexFX_1",0,0,0,0,0,0,0,1061) //1061
        stop
    }
}

actor HexBeam : BasicFastProjectile//FastProj to match damager hitbox
{
    +MISSILE
    +NOGRAVITY
    +SKYEXPLODE
    +EXPLODEONWATER
    +DONTSPLASH
    +PAINLESS
    +CLIENTSIDEONLY
    RenderStyle None
    Damage (0)
    Radius 10
    Height 10
    Speed 15
    Scale 2.5
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_GiveInventory("ProjectileCode",1)
        TNT1 A 0 A_JumpIf(Pitch > HexRange,"Death2")
        TNT1 A 0 A_SetPitch(Pitch+1)
        TNT1 A 0 A_SpawnItemEx("HexBeam",0,0,0,momx,momy,momz,0,552+1)//512+32+8
        TNT1 A 0 A_Stop
        TNT1 A 0 A_SpawnItemEx("HexRayFX",0,0,0,0,0,0,0,1)
        TNT1 A 0 A_SpawnItemEx("PursuitImpactParticle",0,0,0,random2(2),random2(2),random2(2),0,1)
        TNT1 A 1
        stop
    Death:
        TNT1 A 0 A_SpawnItemEx("HexFX",0,0,0,0,0,0,0,1)
        TNT1 A 0 A_SpawnItemEx("ShadowBallImpactFX2", 0, 0, 0, 0, 0, 0, 0,1)
        stop
    Death2:
        TNT1 A 0 A_Stop
        TNT1 A 0 A_SpawnItemEx("HexFX",0,0,0,0,0,0,0,1)
        TNT1 A 0 A_SpawnItemEx("ShadowBallImpactFX2", 0, 0, 0, 0, 0, 0, 0,1)
        stop
    }
}

actor HexRingGuide : BasicHelper
{
translation "198:198=220:220", "192:192=229:229"
	reactiontime 15
	var int user_angle;
	States
	{
		Spawn:
		TNT1 A 0
		TNT1 A 0 //A_SetUserVar("user_angle", random(0, 30))
		SpawnLoop:
		TNT1 A 0 A_SpawnItemEx("HexGuideDot", HexRad, 0, -(z-floorz)+24, 0, 0, 0, user_angle, 1061)
		TNT1 A 0 A_SpawnItemEx("HexGuideDot", -HexRad, 0, -(z-floorz)+24, 0, 0, 0, user_angle, 1061)
		TNT1 A 0 A_SetUserVar("user_angle", user_angle + 12)
		TNT1 A 0 A_Countdown
		loop
		Death:
		TNT1 A 0
		stop
	}
}


actor HexRingSpawner : FastProjectile
{
translation "198:198=220:220", "192:192=229:229"
+DONTBLAST
+SKYEXPLODE
+THRUACTORS
+CLIENTSIDEONLY
reactiontime 1
damage (0)
radius 3
height 3
speed 600
States
{
Spawn:
TNT1 A 0
TNT1 A 1 A_CountDown
loop
Death:
TNT1 A 0 A_Jumpif(z-floorz > 625,"Terminate")
TNT1 A 0 A_SpawnItemEx("HexRingGuide",0,0,0,0,0,0,0,1)
stop

Terminate:
TNT1 A 0 
stop
}
}

/*
actor HexGraphicSpawner : HexRingSpawner
{
States
{
Spawn:
TNT1 A 0
TNT1 A 1 A_CountDown
loop
Death:
TNT1 A 0 A_Jumpif(z-floorz > 475,"Terminate")
TNT1 A 0 A_SpawnItemEx("Hex_Graphic1",0,0,-(z-floorz)+60,0,0,0,0,0)
stop

Terminate:
TNT1 A 0 
stop
}
}
*/
actor HexGuideDot : BasicGuideDot {}

actor HexSpawner : FastProjectile
{
+DONTBLAST
+SKYEXPLODE
+THRUACTORS
reactiontime 1
damage (0)
radius 3
height 3
speed 600
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 1 A_CountDown
loop
Death:
TNT1 A 0 A_Jumpif(z-floorz > 625,"Terminate")
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 2
TNT1 A 0 A_SpawnItemEx("HexBurst",0,0,-(z-floorz),0,0,0,0,1)
TNT1 A 1
stop

Terminate:
TNT1 A 0 
stop
}
}


actor HexBurst : BasicExplosion2
{
translation "202:202=210:210"//90
Damagetype "Hex"
Obituary "$OB_Hex"
scale 2.5
Var int user_angle;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_PlaySoundEx("weapon/napalm", "Weapon")
TNT1 A 1 A_RadiusGive("HexCheck",HexRad,RGF_PLAYERS|RGF_OBJECTS)
TNT1 A 0 A_SpawnItemEx("HexBurstFX",0,0,0,0,0,0,0,1)
TNT1 A 1 A_Explode(MBP_Hex,HexRad,0,0,HexRad/2)
TNT1 A 6 
stop
}
}


actor HexBurstFX : BasicHelper
{
+CLIENTSIDEONLY
reactiontime 4
var int user_angle;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCodeSyncTarget",1)
TNT1 A 1
TNT1 A 0 A_SpawnItemEx("HexFX_2",0,0,65,0,0,0,0,1061) //1061
SpawnLoop:
TNT1 A 0 A_SpawnItemEx("HexFX_1",0,0,65,0,0,0,0,1061) //1061
TNT1 AAA 0 A_SpawnItemEx("HexFX",HexRad,0,0,0,0,15,random(0,360),1061) //1061
TNT1 A 2 A_Countdown
loop
Death:
TNT1 A 0
stop
}
}

actor HexFX_1 : BasicClientside
{
Scale 2.0
Renderstyle "Add"
ReactionTime 5
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
Spawn2:
EVEY A 1 A_SetScale(ScaleX+0.1)
TNT1 A 0 A_Fadeout
TNT1 A 0 A_CountDown
loop
}
}

actor HexFX_2 : BasicClientside
{
Scale 2.0
ReactionTime 5
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
EVEY A 17
EVEY AAAAA 1 A_Fadeout
stop
}
}


actor HexFX : BasicClientside
{
Scale 1.5
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TOXI ABCDEFG 2 A_ScaleVelocity(0.6)
stop
}
}


actor HexRayFX : BasicClientside
{
scale 2.0
renderstyle "Subtract"
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
MBEA A 3
MBEA AAAAA 2 A_Fadeout
stop
}
}