actor AstonishMove : WepMasterBase
{
Tag "Astonish"
obituary "$OB_Astonish"
Weapon.AmmoUse 1
Weapon.AmmoGive 35
weapon.ammotype "AstonishPP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
States
{
Spawn:
WEAP X 1
stop

Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_B)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 0 A_Jump(256,"Fire.Melee")
Goto Fire.Melee

Fire.Melee:
TNT1 A 0 A_PlaySoundEx("misc/Clap","Weapon")
TNT1 A 0 A_FireCustomMissile("AstonishMelee",0,1,0,0)
Goto Fire.After

Fire.After:
"####" B 1 A_GiveInventory("HalfRecovery_B")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End
}
}

actor AstonishMove1 : AstonishMove {Weapon.SlotNumber 1}
actor AstonishMove2 : AstonishMove {Weapon.SlotNumber 2}
actor AstonishMove3 : AstonishMove {Weapon.SlotNumber 3}
actor AstonishMove4 : AstonishMove {Weapon.SlotNumber 4}

actor AstonishMove5 : AstonishMove 
{
Weapon.SlotNumber 5
States
{
Fire:
TNT1 A 0 A_PlaySoundEx("weapon/SlashClaw","Weapon")
TNT1 A 0 A_FireCustomMissile("AstonishMelee",0,1,0,0)
Goto Fire.End

Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("AstonishMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}

//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor AstonishPP : Ammo {inventory.amount 1 inventory.Maxamount 35}
//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]

actor AstonishMelee : BasicMeleeAttack
{
Speed 44
Scale 1.0
DamageType "Astonish"
Obituary "$OB_Astonish"
Damage(MBP_Astonish1)
ReactionTime 6
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
Spawn2:
TNT1 A 1 A_SpawnItemEx("AstonishFXTrail", 0, 0, 0, 0, 0, 0, 0,SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE)
TNT1 A 0 A_SetScale(Scalex+1.1)
TNT1 A 0 A_CountDown
loop

Death:
TNT1 A 0 A_Stop
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 0 A_SpawnItemEx("AstonishFX", 0, 0, 0, 0, 0, 0, 0,SXF_TRANSFERTRANSLATION|SXF_TRANSFERSCALE)
TNT1 A 5
stop
}
}


actor AstonishFXTrail : BasicClientside
{
scale 5.0
States
{
Spawn:
TNT1 A 0 
HITG FGH 1
HITG HHH 1 A_Fadeout(0.3)
stop
}
}

actor AstonishFX : BasicClientside
{
scale 4.5
States
{
Spawn:
TNT1 A 0 
HITG FGH 1
HITG H 1 A_SetScale(ScaleX+0.5)
HITG H 0 A_Fadeout(0.3)
HITG H 1 A_SetScale(ScaleX+0.5)
HITG H 0 A_Fadeout(0.3)
HITG H 1 A_SetScale(ScaleX+0.5)
HITG H 0 A_Fadeout(0.3)
stop
}
}


actor AstonishBackstabItem : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_SpawnItemEX("AstonishBackstab")
stop
}
}

actor AstonishBackstab
{
var int user_stabbed_angle;
var int user_stabber_angle;
var int user_stab_angle_dif;
Height 0
Radius 0
+NOINTERACTION
+NOCLIP
damagetype "Astonish2"
PROJECTILE
//+SERVERSIDEONLY
states
{
Spawn:
TNT1 A 0
TNT1 A 0 A_RearrangePointers(AAPTR_DEFAULT, AAPTR_DEFAULT, AAPTR_TARGET) //target assigned to tracer tracer
TNT1 A 0 A_TransferPointer(AAPTR_TARGET, AAPTR_DEFAULT, AAPTR_TARGET, AAPTR_TARGET) //target's target assigned to target
TNT1 A 0 A_SetUserVar("user_stabbed_angle", angle)
//TNT1 A 0 A_LogInt(user_stabbed_angle)
TNT1 A 0 A_FaceTarget
TNT1 A 0 A_SetUserVar("user_stabber_angle", (angle+180)%360)
TNT1 A 0 A_SetUserVar("user_stab_angle_dif", abs(user_stabbed_angle-user_stabber_angle))
TNT1 A 0 A_JumpIf(user_stab_angle_dif>180,"Wrap")
goto BackstabCheck
Wrap:
TNT1 A 0 A_SetUserVar("user_stab_angle_dif", abs(user_stab_angle_dif-360))
BackstabCheck:
//TNT1 A 0 A_LogInt(user_stab_angle_dif)
TNT1 A 0 A_JumpIf(user_stab_angle_dif<90,"DoBackstab")
//TNT1 A 0 A_JumpIf(user_stab_angle_dif<45,"DoBackstab")
TNT1 A 0 //A_Log("Facestab")
stop
DoBackstab:
TNT1 A 0 A_Warp(AAPTR_TRACER,0,0,ACS_NamedExecuteWithResult("TracerHeightGet")/2,0,0)
TNT1 A 0 A_RadiusGive("AstonishBackstabImmune",IMMUNE_RADIUS,RGF_PLAYERS|RGF_MONSTERS|RGF_OBJECTS)
TNT1 A 0 A_TakeInventory("AstonishBackstabImmune",1,0,AAPTR_TRACER)
TNT1 A 0 A_Explode(MBP_Astonish2,1,0,0,1)
TNT1 A 0 A_PlaysoundEX("Weapon/Slashclawhit","Weapon")//A_Log("Backstab")
TNT1 A 5
stop
}
}

actor AstonishBackstabImmune : SpecialDamageImmune
{
damagefactor "Astonish2", 0.0
}