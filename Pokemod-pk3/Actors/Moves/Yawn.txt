//#region -=- depreciated -=-

/*
actor YawnMove : WepMasterBase
{
Tag "Yawn"
obituary "$OB_YAWN"
Weapon.AmmoUse 1
Weapon.AmmoGive 10
weapon.ammotype "YawnPP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
+WEAPON.EXPLOSIVE
States
{
Spawn:
WEAP X 1
stop
Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_C)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 0 A_Jump(256,"Fire.Bullet")
Goto Fire.Bullet

Fire.Bullet:
"####" B 0 A_JumpIf(IsPointerEqual(AAPTR_TRACER, AAPTR_NULL) == TRUE, "NoAmmo")
"####" B 0 A_PlaySoundEx("weapon/noisecrush2","Weapon")
"####" BBBBB 2 A_GiveInventory("TargHolder")
"####" B 5 A_FireCustomMissile("YawnCloud",0,1,0,0)
"####" B 0 A_TakeInventory("TargHolder")
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.After:
"####" B 1 A_GiveInventory("SemiRecovery_C")
"####" C 0 A_REfire("Fire")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End
}
}

*/
//#endregion


actor YawnMove : WepMasterBase
{
Tag "Yawn"
obituary "$OB_Yawn"
Weapon.AmmoUse 1
Weapon.AmmoGive 10
weapon.ammotype "YawnPP"
scale 2.0
Inventory.Pickupmessage "$PU_MEGABUSTER"
+WEAPON.EXPLOSIVE
States
{
Spawn:
WEAP X 1
stop


Fire:
"####" BBB 1 A_Jumpif(CallACS("CheckWeaponFire",RC_A)==1,"Fire.Begin")
"####" B 0 A_Jump(256,"NoAmmo")
Goto NoAmmo

Fire.Begin:
"####" B 0
"####" B 0 A_Jump(256,"Fire.Bullet")
Goto Fire.Bullet

Fire.Bullet:
"####" B 0 A_PlaySoundEx("Move/Yawn","Weapon")

"####" B 0 A_FireCustomMissile("YawnShot",0,1,0,0)
"####" B 0 A_FireCustomMissile("YawnShot",15,0,0,0)
"####" B 0 A_FireCustomMissile("YawnShot",345,0,0,0)
"####" B 0 A_Jump(256,"Fire.After")
Goto Fire.After

Fire.After:
"####" B 1 A_GiveInventory("SemiRecovery_A")
"####" C 0 A_REfire("Fire")
"####" B 0 A_Jump(256,"Fire.End")
Goto Fire.End
}
}


actor YawnMove1 : YawnMove {Weapon.SlotNumber 1}
actor YawnMove2 : YawnMove {Weapon.SlotNumber 2}
actor YawnMove3 : YawnMove {Weapon.SlotNumber 3}
actor YawnMove4 : YawnMove {Weapon.SlotNumber 4}

actor YawnMove5 : YawnMove 
{
Weapon.SlotNumber 5
States
{
Fire.End:
TNT1 A 0
TNT1 A 0 A_TakeInventory("YawnMove5",9)
TNT1 A 0 A_Jump(256,"Ready")
Goto Ready
}
}
//[+]========================================================================[+]
//-----------------------------|Ammo & Inventory|------------------------------
//[+]========================================================================[+]
actor YawnPP : Ammo {inventory.amount 1 inventory.Maxamount 10}

actor STF_Yawn : Powerup {inventory.amount 1 Powerup.Duration -6}

actor YawnEffectInitiate : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",0,STATUS_MAJOR),"Nope") //Blocked by protect|Detect|Substitute|Safeguard
TNT1 A 0 A_Jumpifinventory("CringeGuard",1,"Nope")
TNT1 A 0 A_Jumpifinventory("STF_Yawn",1,"Sustain")
TNT1 A 0 A_GiveInventory("STF_Yawn",1)
TNT1 A 0 A_SpawnItemEX("YawnEffectWatcher")
TNT1 A 0 A_GiveInventory("StatUpdator",1)
stop

Sustain:
TNT1 A 0 A_GiveInventory("STF_Yawn",1)
stop
Nope:
TNT1 A 0
stop
}
}

Const int Yawn_Item = 17;
//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]
//#region -=- depreciated -=-
/*
actor YawnCloud : BasicProjectile
{
+SeekerMissile
+HitTracer
Translation "250:250=202:202", "192:192=69:69"
Speed 15
Damage (0)
DamageType "Yawn"
obituary "$OB_Yawn"
Renderstyle "Translucent"
Alpha 0.9
radius 16
Reactiontime 35
height 16
scale 1.5
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 0 A_TransferPointer(AAPTR_TARGET,AAPTR_DEFAULT,AAPTR_TRACER,AAPTR_TRACER)
Spawn2:
TNT1 A 0 A_SeekerMissile(2,5,SMF_PRECISE)
TNT1 A 0 A_Spawnitemex("YawnCloudTrail",0,0,0,0,0,0,0,SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY)
YAWN D 1 A_Countdown
loop

Crash:
YAWN E 0 A_JumpIfTracerCloser(100,"YawnEfect")
Goto Death

YawnEfect:
TNT1 A 0 A_JumpIfInventory("SafeguardPower",1,"Death")
//--
YAWN E 0 A_GiveInventory("YawnEffectInitiate",1,AAPTR_TRACER)
Goto Death

Death:
YAWN EFGHI 3 
PSMS IIII 0 A_Spawnitemex("YawnCloudFX",10,0,random2(3),1,0,random2(3),random(1,360),SXF_TRANSFERTRANSLATION)
YAWN I 1 
stop
}
}

actor YawnCloudTrail : NoiseCrushTrail1
{
ReactionTime 1
Renderstyle "Translucent"
Alpha 0.9
scale 1.5
States
{
Spawn:
YAWN CBA 3
NCRU E 0 A_CountDown
loop
Death:
TNT1 A 0
stop
}
}
*/
//#endregion

actor YawnShot
{
PROJECTILE
+RIPPER
Radius 4
Height 4
scale 2.5
damage (0)
+FORCEXYBILLBOARD
speed 45
reactiontime 3
Args 0
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_SpawnItemEx("YawnCloudFX",0,0,0,0,0,0,0,16385)
TNT1 A 0 A_SetPitch(Pitch+1)
TNT1 A 0 A_SpawnItemEx("YawnShot_A",0,0,0,MomX,Momy,Momz,0,17929)
Stop

Death:
TNT1 A 0 
stop
}
}

actor YawnShot_A : YawnShot
{
Args 0,0,0
Var Int User_Step;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_SpawnItemEx("YawnCloudFX",0,0,0,0,0,0,0,16385)
TNT1 A 0 A_SetPitch(Pitch+1)
TNT1 A 0 A_SetScale(ScaleX+0.5)
TNT1 A 0 A_SetUserVar("User_Step",Pitch % 3)
TNT1 A 0 A_Jumpif(User_Step == 0,"Spawn2")
TNT1 A 0 A_SpawnItemEx("YawnShot_A",0,0,0,MomX,Momy,Momz,0,17929)
stop

Spawn2:
TNT1 A 0 A_SetArg(0,MomX)
TNT1 A 0 A_SetArg(1,MomY)
TNT1 A 0 A_SetArg(2,MomZ)
TNT1 A 0 A_Stop
TNT1 A 0 ACS_NamedExecuteAlways("PKMNACS_RadiusGive",0,Yawn_Item,150,RG_ENEMY)
TNT1 A 3 
TNT1 A 0 A_SpawnItemEx("YawnShot_B",0,0,0,Args[0],Args[1],Args[2],0,17929)
TNT1 A 2
stop
}
}

actor YawnShot_B : YawnShot
{
Args 0,0,0
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_SpawnItemEx("YawnCloudFX",0,0,0,0,0,0,0,16385)
TNT1 A 0 A_SetPitch(Pitch+1)
TNT1 A 0 A_SetScale(ScaleX+0.5)
TNT1 A 0 A_Jumpif(Pitch >= reactiontime*3,"Death")
TNT1 A 0 A_SpawnItemEx("YawnShot_A",0,0,0,MomX,Momy,Momz,0,17929)
stop

}
}


actor YawnCloudFX : NoiseCrushTrail1
{
ReactionTime 1
Renderstyle "Translucent"
Alpha 0.9
scale 1.5
States
{
Spawn:
YAWN JJJKL 2
NCRU E 0 A_CountDown
loop
Death:
TNT1 A 0
stop
}
}


actor YawnTagPickup : CustomInventory
{
States
{
Pickup:
TNT1 A 0
TNT1 A 0 A_SpawnItemEx("YawnParticle", random2(256/24), random2(256/24), 45, 2, 2, 2, random(0, 359))
stop
}
}

actor YawnParticle : BasicClientside
{
scale 3.0
Renderstyle "Translucent"
alpha 0.8
speed 7
States
{
Spawn:
TNT1 A 0
YAWN JJJKL 2
stop
}
}


actor YawnEffectWatcher : BasicHelper 
{
Var int user_NapTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_SetUserVar("user_NapTime",user_NapTime+5)
TNT1 A 4 A_GiveToTarget("SpdDownFXSpawn")
TNT1 A 0 A_GiveToTarget("YawnTagPickup")
TNT1 A 0 A_Jumpif(CallACS("CheckStatusGuard",AAPTR_TARGET,STATUS_MAJOR|STATUS_MINOR),"Death") //Blocked by protect|Detect|Substitute|Safeguard
TNT1 A 0 A_Jumpif(CallACS("YawnBreakCheck",AAPTR_TARGET),"Death") //Blocked by protect|Detect|Substitute|Safeguard
TNT1 A 1 A_JumpIfInTargetInventory("CureAll",1,"Death")
TNT1 A 1 A_JumpIfInTargetInventory("STF_Yawn",1,"Spawn")


TNT1 A 0 A_JumpIf(user_NapTime >= 175,"NapTime")
Goto Check1

Check1:
TNT1 A 1 A_JumpIfInTargetInventory("STF_Yawn",1,"Spawn")
Goto Death


NapTime:
TNT1 A 0 A_GiveToTarget("SleepStatusProc")
Goto Death

Death:
TNT1 A 0 A_TakeFromTarget("STF_Yawn",999)
TNT1 A 1 A_GiveToTarget("StatUpdator")
TNT1 A 0 
stop
}
}

