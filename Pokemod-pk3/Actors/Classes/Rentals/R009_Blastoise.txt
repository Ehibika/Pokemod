/*
[+]===================================[+]

[+]===================================[+]
*/


Actor R_Blastoise : ClassBaseRentals 
{
Player.DisplayName "Blastoise"
Player.SoundClass "Blastoise"

Player.StartItem "PKMNRentalKit"
//============|
Player.StartItem "BlastoiseRentalSetupItem"
//============|
Player.StartItem "Base_HP", 100
Player.StartItem "Base_PAttack", 62
Player.StartItem "Base_PDefense", 105 
Player.StartItem "Base_SAttack", 85
Player.StartItem "Base_SDefense", 105 

//============|

States
{
Spawn: 
P009 A 0
P009 B 1 
P009 A 1
GoTo Spawn+2
See:
P009 BCDE 5
GoTo Spawn+1
Missile:
P009 A 0 A_JumpIfInventory("ConshotTimer",1,2) 
P009 F 5 
P009 G 4
GoTo Spawn+2

PainFix:
P009 H 0 
GoTo PainFrames
}
}

actor BlastoiseRentalMoves : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIf(CallACS("RentalBotCheck") == 1,"BotWep")

TNT1 A 0 A_GiveInventory("HydroPumpMove1")
TNT1 A 0 A_GiveInventory("LiquidationMove2")
TNT1 A 0 A_GiveInventory("ShellSmashMove3")
TNT1 A 0 A_GiveInventory("WideGuardMove4")
stop

BotWep:
TNT1 A 0 A_GiveInventory("HydroPumpMove1")
stop
}
}

 actor BlastoiseRentalSetupItem : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 ACS_NamedExecuteAlways("PKMN_RentalsSetup",0,Dex_Blastoise)
stop
}
}