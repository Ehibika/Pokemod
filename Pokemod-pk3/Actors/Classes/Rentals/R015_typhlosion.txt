/*
[+]===================================[+]

[+]===================================[+]
*/


Actor R_Typhlosion : ClassBaseRentals 
{
Player.DisplayName "Typhlosion"
Player.SoundClass "Typhlosion"

Player.StartItem "PKMNRentalKit"
//============|
Player.StartItem "TyphlosionRentalSetupItem"
//============|
Player.StartItem "Base_HP", 110
Player.StartItem "Base_PAttack", 90
Player.StartItem "Base_PDefense", 89 
Player.StartItem "Base_SAttack", 90
Player.StartItem "Base_SDefense", 85 
Player.StartItem "Base_Speed", 70
//============|

States
{
Spawn: 
P015 A 0
P015 B 1 
P015 A 1
GoTo Spawn+2
See:
P015 BCDE 5
GoTo Spawn+1
Missile:
P015 A 0 A_JumpIfInventory("ConshotTimer",1,2) 
P015 F 5 
P015 G 4
GoTo Spawn+2

PainFix:
P015 H 0 
GoTo PainFrames
}
}

actor TyphlosionRentalMoves : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIf(CallACS("RentalBotCheck") == 1,"BotWep")

TNT1 A 0 A_GiveInventory("FlameThrowerMove1")
TNT1 A 0 A_GiveInventory("RockSlideMove2")
TNT1 A 0 A_GiveInventory("EarthquakeMove3")
TNT1 A 0 A_GiveInventory("RolloutMove4")
stop

BotWep:
TNT1 A 0 A_GiveInventory("FlameBurstMove1")
stop
}
}

 actor TyphlosionRentalSetupItem : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 ACS_NamedExecuteAlways("PKMN_RentalsSetup",0,Dex_Typhlosion)
stop
}
}