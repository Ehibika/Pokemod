actor LoadHeldInventory : CustomInventory
{
States
{
Pickup:
TNT1 A 0 ACS_NamedExecuteAlways("Read_HI_Inventory",0)
stop
}
}

actor SaveHeldInventory : CustomInventory
{
States
{
Pickup:
TNT1 A 0 ACS_NamedExecuteAlways("Write_HI_Inventory",0)
stop
}
}

actor ReloadHeldInventory : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(975, 0)==2,"Nope")
TNT1 A 0 ACS_NamedExecuteAlways("Read_HI_Inventory",0)
stop
Nope:
TNT1 A 0 
stop
}
}

//============
//#region -=- Stat Scarf -=-
actor RedScarf : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxRedScarf : Ammo {inventory.maxamount 10}

actor BlueScarf : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxBlueScarf : Ammo {inventory.maxamount 10}

actor GreenScarf : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxGreenScarf : Ammo {inventory.maxamount 10}

actor YellowScarf : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxYellowScarf : Ammo {inventory.maxamount 10}

actor PinkScarf : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxPinkScarf : Ammo {inventory.maxamount 10}
//#endregion

//#region -=- Leftovers -=-
actor Leftovers : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxLeftovers : Ammo {inventory.maxamount 10}

actor Leftovers_Effect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("Leftovers",1,"Pickup2")
stop
Pickup2:
TNT1 A 0 ACS_NamedExecuteAlways("PKMNACS_Basic(Over)Heal",0,0,(CallACS("PKMNACS_HealthPercent",0,1,10)))
stop
}
}
//#endregion

//#region -=- ShellBell -=-
actor ShellBell : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxShellBell : Ammo {inventory.maxamount 10}

/*  //Useless...
actor ShellBellDrain : PowerDrain 
{
inventory.maxamount 1 
inventory.maxamount 10
powerup.duration 0x7FFFFFFF
Powerup.Strength 1.0
}

actor ShellBell_Effect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("ShellBell",1,"Pickup2")
stop
Pickup2:
TNT1 A 0 A_GiveInventory("ShellBellDrain",0)
stop
}
}
*/

actor ShellBell_Effect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("ShellBell",1,"Pickup2",AAPTR_TARGET)
stop
Pickup2:
TNT1 A 0 ACS_NamedExecuteAlways("LifeDrainEffect",0,15)
stop
}
}
//#endregion

//#region -=- Life Orb -=-
actor LifeOrb : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxLifeOrb : Ammo {inventory.maxamount 10}
actor LifeOrbPower : Atk {inventory.amount 1 Powerup.Duration 0x7FFFFFFF DamageFactor "NORMAL", 1.3}


actor LifeOrb_Effect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("LifeOrb",1,"Pickup2",AAPTR_TARGET)
stop
Pickup2:
TNT1 A 0 ACS_NamedExecuteAlways("PKMN_RecoilDamager",0,25)
stop
}
}

actor LifeOrb_Effect2 : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("LifeOrb",1,"Pickup2")
stop
Pickup2:
TNT1 A 0 A_GiveInventory("LifeOrbPower",0)
stop
}
}
//#endregion

//#region -=- Assault Vest -=-
actor AssaultVest : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxAssaultVest : Ammo {inventory.maxamount 10}
actor AssaultVestGuard : SDef {inventory.amount 1 Powerup.Duration 0x7FFFFFFF DamageFactor "NORMAL", 0.5}

actor AssaultVest_Effect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("AssaultVest",1,"Pickup2")
stop
Pickup2:
TNT1 A 0 A_GiveInventory("AssaultVestGuard",0)
stop
}
}
//#endregion

//#region -=- Choice Scarf -=-
actor ChoiceScarf : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxChoiceScarf : Ammo {inventory.maxamount 10}

actor STF_ChoiceScarf : BaseSTatusFlag4 {}

actor HeldItemCooldown : BaseSTatusFlag3 {}


actor ChoiceScarf_Effect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("ChoiceScarf",1,"Pickup2")
stop
Pickup2:
TNT1 A 0 A_JumpIfInventory("STF_ChoiceScarf",1,"Pickup3")
TNT1 A 0 A_GiveInventory("STF_ChoiceScarf",0)
TNT1 A 0 A_GiveInventory("Statupdator",0)
TNT1 A 0 A_SpawnitemEX("ChoiceScarfEffectWatcher")
stop
Pickup3:
TNT1 A 0 A_GiveInventory("STF_ChoiceScarf",0)
stop
}
}

actor ChoiceScarfEffectWatcher : BasicHelper 
{
Var int user_TickTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("HazeFlag",1,"Death")
TNT1 A 5 
TNT1 A 0 A_GiveToTarget("SpawnStatusParticles")
TNT1 A 0 A_JumpIfInTargetInventory("STF_ChoiceScarf",1,"Spawn")
Goto Death

Death:
TNT1 A 0 A_GiveToTarget("StatUpdator")
TNT1 A 0 A_GiveToTarget("BuffLossSoundCue")
TNT1 A 0 A_GiveToTarget("HeldItemCooldown")
TNT1 A 0 A_TakeFromTarget("STF_ChoiceScarf",9)
TNT1 A 2 
stop
}
}
//#endregion

//#region -=- Choice Band -=-
actor ChoiceBand : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxChoiceBand : Ammo {inventory.maxamount 10}

actor ChoiceBandPower : PAtk {inventory.amount 1 Powerup.Duration -5 DamageFactor "NORMAL", 1.3}


actor ChoiceBand_Effect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("ChoiceBand",1,"Pickup2")
stop
Pickup2:
TNT1 A 0 A_JumpIfInventory("ChoiceBandPower",1,"Pickup3")
TNT1 A 0 A_GiveInventory("ChoiceBandPower",0)
TNT1 A 0 A_SpawnitemEX("ChoiceBandEffectWatcher")
stop
Pickup3:
TNT1 A 0 A_GiveInventory("ChoiceBandPower",0)
stop
}
}

actor ChoiceBandEffectWatcher : BasicHelper 
{
Var int user_TickTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("HazeFlag",1,"Death")
TNT1 A 5 
TNT1 A 0 A_GiveToTarget("BandFXGive")
TNT1 A 0 A_JumpIfInTargetInventory("ChoiceBandPower",1,"Spawn")
Goto Death

Death:
TNT1 A 0 A_GiveToTarget("BuffLossSoundCue")
TNT1 A 0 A_GiveToTarget("HeldItemCooldown")
TNT1 A 0 A_TakeFromTarget("ChoiceBandPower",9)
TNT1 A 2 
stop
}
}

actor BandFXGive : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_SpawnItemEx("StatUpFX",random(30,50),0,0,0,0,5,random(0,360),SXF_TRANSFERTRANSLATION)
stop
Nope:
TNT1 A 0
stop
}
}
//#endregion

//#region -=- Weakness Policy -=-
actor WeaknessPolicy : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxWeaknessPolicy : Ammo {inventory.maxamount 10}
actor STF_WeaknessPolicy : BaseSTatusFlag4 {}

actor WeaknessPolicy_Effect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("WeaknessPolicy",1,"Pickup2")
stop
Pickup2:
TNT1 A 0 A_JumpIfInventory("STF_WeaknessPolicy",1,"Pickup3")
TNT1 A 0 A_GiveInventory("STF_WeaknessPolicy",0)
TNT1 A 0 A_GiveInventory("Statupdator",0)
TNT1 A 0 A_SpawnitemEX("WeaknessPolicyEffectWatcher")
stop
Pickup3:
TNT1 A 0 A_GiveInventory("STF_WeaknessPolicy",0)
stop
}
}

actor WeaknessPolicyEffectWatcher : BasicHelper 
{
Var int user_TickTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("HazeFlag",1,"Death")
TNT1 A 5 
TNT1 A 0 A_GiveToTarget("SpawnStatusParticles")
TNT1 A 0 A_JumpIfInTargetInventory("STF_WeaknessPolicy",1,"Spawn")
Goto Death

Death:
TNT1 A 0 A_GiveToTarget("StatUpdator")
TNT1 A 0 A_GiveToTarget("BuffLossSoundCue")
TNT1 A 0 A_TakeFromTarget("STF_WeaknessPolicy",9)
TNT1 A 2 
stop
}
}
//#endregion

//#region -=- Focus Band -=-
actor FocusBand : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxFocusBand : Ammo {inventory.maxamount 10}

actor FocusBandProtectFlag : ProtectGuard {powerup.Duration 87}

actor FocusBand_Effect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_JumpIfInventory("FocusBand",1,"Pickup2")
stop
Pickup2:
"####" B 0 A_PlaySoundEx("Support/Barrier","Soundslot6")
"####" A 0 A_GiveInventory("DashSet_B")
"####" A 0 A_GiveInventory("FocusBandProtectFlag")
TNT1 A 0 A_SpawnitemEX("FocusBandProtect")
TNT1 A 0 A_SpawnitemEX("FocusBandEffectWatcher")
stop
}
}

actor FocusBandProtect : BasicClientside //FX
{
scale 1.5
Translation "192:192=104:104", "198:198=110:110", "195:195=130:130"
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0 ACS_NamedExecuteAlways("GeneralWarper2",0)
TNT1 A 0 //A_GiveInventory("ProjectileFXCode",1)
Spawn2:
KBAR ABCDEFGHI 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
loop
Death:
KBAR A 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR A 0 A_Fadeout
KBAR B 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR B 0 A_Fadeout
KBAR C 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR C 0 A_Fadeout
KBAR D 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR D 0 A_Fadeout
KBAR E 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR E 0 A_Fadeout
KBAR F 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
KBAR F 0 A_Fadeout
stop
}
}

actor FocusBandEffectWatcher : BasicHelper 
{
Var int user_TickTime;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("HazeFlag",1,"Death")
TNT1 A 5 
TNT1 A 0 A_GiveToTarget("FireSpinSlower")
TNT1 A 0 A_JumpIfInTargetInventory("FocusBandProtectFlag",1,"Spawn")
Goto Death

Death:
TNT1 A 0 A_GiveToTarget("DashSetOff")
TNT1 A 0 A_GiveToTarget("HeldItemCooldown")
TNT1 A 2 
stop
}
}
//#endregion

//#region -=- Lagging Tail -=-
actor LaggingTail : Inventory {inventory.maxamount 1 inventory.maxamount 10}
actor MaxLaggingTail : Ammo {inventory.maxamount 10}
//#endregion

//===============================
//===============================

actor HeldCheck_Passive : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0 
stop
Pickup:
TNT1 A 0 A_Log("Giving passives")
TNT1 A 0 A_GiveInventory("ClearHeldPassive",0)
//==
TNT1 A 0 A_GiveInventory("LifeOrb_Effect2",0)
TNT1 A 0 A_GiveInventory("AssaultVest_Effect",0)
stop
}
}

actor HeldCheck_Recovery : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_GiveInventory("Leftovers_Effect",0)
TNT1 A 0 A_GiveInventory("ChoiceBand_Effect",0)
TNT1 A 0 A_GiveInventory("ChoiceScarf_Effect",0)
TNT1 A 0 A_GiveInventory("FocusBand_Effect",0)


stop
}
}

actor HeldCheck_OnHit : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_GiveInventory("ShellBell_Effect",0)
TNT1 A 0 A_GiveInventory("LifeOrb_Effect",0)
//TNT1 A 0 A_GiveInventory("WeaknessPolicy_Effect",0)
stop
}
}


actor HeldCheck_OnKill : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_GiveInventory("ShellBell_Effect",0)
TNT1 A 0 A_GiveInventory("LifeOrb_Effect",0)
stop
}
}

actor ClearHeldPassive : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_TakeInventory("LifeOrbPower",99)
TNT1 A 0 A_TakeInventory("AssaultVestGuard",99)
stop
}
}