/* -=- Leveling Database -=-
 * Variables and functions for A_Leveling
 *
 * 

*/

#library "DB_Leveling"
#import "Dex_Pokemon.acs"
#import "Dex_Evo.acs"
#import "Dex_Types.acs"
#import "Dex_Leveling.acs"
#import "Dex_BaseStats.acs"
#import "Dex_Moves.acs"
#import "Dex_Movesets.acs"
#import "WEPACS.acs"
#import "DB_Core.acs"
#include "zcommon.acs"

//#region -=- General Variables -=-
#region -=- General Variables -=-
Int TeamEXPAward [4] = {};
Int TeamBPAward [4] = {};

Int TeamEXPBank[4] = {};

#LIBDEFINE EXPSHARERANGE 600

#endregion
//#endregion

Function void ReportNewMoves(int Dexnum, int Startlvl, int Endlvl)
{
int j;
int k;
int MoveListVal;

For(j = Startlvl; j < Endlvl; j++) 
{
    For(k = 0; k < 4; k++)
    {
        MoveListVal = MoveDex2[Dexnum][j][k];
        if (MoveListVal != -1) 
            {Print(n:0,s:"\cf can now learn \cj",s:weapons_ammo[MoveListVal][2]);}
        else{break;}
    }
}

}


#LIBDEFINE HITEXP 1
Function Int EXPTime (int mod)
{
//Returns when you are allowed to earn EXP
int Output;

if(GetActorProperty(0,APROP_HEALTH)<1 && mod != HITEXP){return 0;}

if(GetCvar("PKMN_NoEXP")==1){return 0;}

if(GetCvar("lastmanstanding")==1||GetCvar("teamlms")==1)
    {
    if(GetGameModeState() == 2 ||GetGameModeState() == 3){output = 1;}
    }
else if (GetCvar("Game_Arena")==1){if(GetCvar("Game_GameState")==1||GetCvar("Game_GameState")==2||GetCvar("Game_GameState")==3){output = 1;}}
else{output = 1;}

return Output;
}

Function Int ShopTime (Void)
{
//Returns when you are allowed to access Shops
int Output;
if(CheckInventory("PKMN_AllowFreeSetup")){output = 1;}
if(CheckInventory("InSafeZone")){output = 1;}
if(CheckInventory("CabinetCoolDown")){output = 1;} //For Jax's 1 flag koth
if(InWarmup){output = 1;}
if(PlayerIsSpectator(PlayerNumber()) == 2){output = 1;}
if(GetCvar("lastmanstanding")==1||GetCvar("teamlms")==1)
    {
    if(GetGameModeState() != 2){output = 1;}
	}
if (GetCvar("Game_Arena")==1){if(GetCvar("Game_GameState")==0){output = 1;}}
	return Output;
}

Function Int StatusTime (Void)
{
//Returns when you are allowed to perform status functions like
//Evolutions or learning new moves
int Output = 1;

if(GetCvar("lastmanstanding")==1||GetCvar("teamlms")==1)
    {
    Output = 0;
    if(GetGameModeState() != 2){output = 1;}
    if(CheckInventory("PKMN_AllowFreeSetup")){output = 1;}
    if(PlayerIsSpectator(PlayerNumber()) == 2){output = 1;}
	}
if (GetCvar("Game_Arena")==1){if(GetCvar("Game_GameState")!=0){output = 0;}}

	return Output;
}

Script "CheckStatusTime" (void)
{
setResultValue(StatusTime());
}

Function int GetEXPBank (int Team)
{
    Switch(Team)
    {
        Case 0: return GetCvar("EXPBank_BLUE"); break;
        Case 1: return GetCvar("EXPBank_RED"); break;
        Case 2: return GetCvar("EXPBank_GREEN"); break;
        Case 3: return GetCvar("EXPBank_YELLOW"); break;
    }
    return 0;
}

Function void SetEXPBank (int Team, int Ammount)
{
Str Cvar;
Switch(Team)
    {
        Case 0: Cvar = "EXPBank_BLUE"; break;
        Case 1: Cvar = "EXPBank_RED"; break;
        Case 2: Cvar = "EXPBank_GREEN"; break;
        Case 3: Cvar = "EXPBank_YELLOW"; break;
    }

    SetCvar(Cvar,GetEXPBank(Team)+Ammount);

}

Function void ClearEXPBank (int Team)
{
Str Cvar;
Switch(Team)
    {
        Case 0: Cvar = "EXPBank_BLUE"; break;
        Case 1: Cvar = "EXPBank_RED"; break;
        Case 2: Cvar = "EXPBank_GREEN"; break;
        Case 3: Cvar = "EXPBank_YELLOW"; break;
    }

    SetCvar(Cvar,0);

}